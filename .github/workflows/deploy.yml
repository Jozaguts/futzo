name: Deploy Nuxt App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Nuxt App via SSH
        env:
          NUXT_PUBLIC_URL_BACKEND: ${{ vars.NUXT_PUBLIC_URL_BACKEND }}
          NUXT_PUBLIC_BACKEND_PREFIX: ${{ vars.NUXT_PUBLIC_BACKEND_PREFIX || 'api/v1' }}
          FACEBOOK_APP_ID: ${{ vars.FACEBOOK_APP_ID }}
          NUXT_HOST: ${{ vars.NUXT_HOST || '0.0.0.0' }}
          NUXT_PUBLIC_APP_NAME: ${{ vars.NUXT_PUBLIC_APP_NAME || vars.APP_NAME || 'Futzo' }}
          NODE_ENV: ${{ vars.NODE_ENV || 'production' }}
          NUXT_GOOGLE_MAPS_API_KEY: ${{ vars.NUXT_GOOGLE_MAPS_API_KEY || secrets.NUXT_GOOGLE_MAPS_API_KEY }}
          NUXT_GOOGLE_MAP_ID: ${{ vars.NUXT_GOOGLE_MAP_ID }}
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH || secrets.DEPLOY_PATH }}
        run: |
          ssh -p ${{ vars.SSH_PORT || secrets.SSH_PORT || '22' }} -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            set -euo pipefail
            cd "$DEPLOY_PATH"

            # Ensure clean working tree and latest code
            git fetch --prune
            git checkout main
            git reset --hard
            git clean -fd
            git pull --ff-only origin main

            # Write .env.prod after cleaning
            cat > .env.prod << EOL
            NUXT_PUBLIC_URL_BACKEND=$NUXT_PUBLIC_URL_BACKEND
            NUXT_PUBLIC_BACKEND_PREFIX=$NUXT_PUBLIC_BACKEND_PREFIX
            FACEBOOK_APP_ID=$FACEBOOK_APP_ID
            NUXT_HOST=$NUXT_HOST
            NUXT_PUBLIC_APP_NAME=$NUXT_PUBLIC_APP_NAME
            NODE_ENV=$NODE_ENV
            NUXT_GOOGLE_MAPS_API_KEY=$NUXT_GOOGLE_MAPS_API_KEY
            NUXT_GOOGLE_MAP_ID=$NUXT_GOOGLE_MAP_ID
            EOL

            yarn install --frozen-lockfile
            NODE_OPTIONS=--max-old-space-size=4096 node node_modules/.bin/nuxt build --dotenv .env.prod

            echo "PM2 diagnostics:"
            echo "USER: $(whoami)"
            command -v node && node -v || true
            command -v pm2 && pm2 -v || echo "pm2 not in PATH"

            # Ensure Node/PM2 when using nvm
            if [ -s "$HOME/.nvm/nvm.sh" ]; then
              . "$HOME/.nvm/nvm.sh"
              nvm use --lts || true
            fi

            # Show PM2 list (may be empty)
            pm2 ls || true

            # Start or reload app; --update-env to take new env vars
            pm2 startOrReload ecosystem.config.cjs --update-env || pm2 start ecosystem.config.cjs --update-env

            # Show process details and recent logs
            pm2 describe futzo || true
            pm2 logs futzo --lines 30 || true
          EOF
