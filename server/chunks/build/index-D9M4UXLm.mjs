import { _ as _sfc_main$2$1, a as _sfc_main$g } from './AppBar-BcqMvHzz.mjs';
import { defineComponent, withCtx, createVNode, unref, mergeProps, createTextVNode, computed, isRef, ref, createBlock, createCommentVNode, openBlock, toDisplayString, resolveComponent, Fragment, renderList, useModel, mergeModels, watch, useSSRContext } from 'vue';
import { ssrRenderComponent, ssrInterpolate, ssrRenderAttrs, ssrRenderClass, ssrRenderList } from 'vue/server-renderer';
import { _ as __nuxt_component_0$2 } from './PrimaryBtn-B0RnAWAj.mjs';
import { f as usePlayerStore, a as useTeamStore, g as useCategoryStore, h as usePositionsStore } from './useScheduleStore-DBhAIDF3.mjs';
import { _ as _export_sfc, V as VCard, f as VCardItem, H as VDivider, F as VCardText, y as useSanctumClient, af as VSelect, C as VTextField, K as __nuxt_component_0$1$1, ab as Al, ae as useAutoAnimate } from './server.mjs';
import { storeToRefs } from 'pinia';
import { _ as __nuxt_component_1 } from './SearchInput-CIOzfvpQ.mjs';
import { _ as _sfc_main$m } from './SecondaryBtn-CVJutODn.mjs';
import { V as VSheet } from './VSheet-DVv3ytGE.mjs';
import { V as VBtn, a as VProgressCircular } from './VBtn-_od1f1mx.mjs';
import { _ as __nuxt_component_0 } from './index-DkcY5wU8.mjs';
import { _ as __nuxt_component_0$1 } from './TransitionSlide-d5qGX2mN.mjs';
import { _ as _sfc_main$n, V as VTextarea } from './BaseInput-CrKT6v3K.mjs';
import { _ as _sfc_main$o } from './BaseCalendarInput-D8pdf43z.mjs';
import { _ as _sfc_main$p } from './drag-drop-image-DRFieU2I.mjs';
import { u as useSchemas } from './useSchemas-CFMbNxa_.mjs';
import { V as VContainer } from './VContainer-C0Se5csP.mjs';
import { V as VAutocomplete } from './VAutocomplete-P_wP5bep.mjs';
import { V as VRow, a as VCol } from './VRow-CwLG7ojV.mjs';
import { V as VItemGroup, a as VItem } from './VItem-DAX1x4SQ.mjs';
import { I as IndicatorStep } from './IndicatorStep-DKaB2dCI.mjs';
import { V as VDialog } from './VDialog-BeIjnChI.mjs';
import { g as getHeaders, _ as _sfc_main$k } from './headers-table-CD9PI4fc.mjs';
import { u as useDropZone } from './index-B5yclgZ6.mjs';
import { V as VFileInput } from './VFileInput-gw90YVbK.mjs';
import { _ as __nuxt_component_0$3 } from './TransitionFade--XplpbbK.mjs';
import { s as setInterval } from './interval-DSlygkzF.mjs';
import { u as useDebounceFn } from './index-DU0YTrEL.mjs';
import { _ as _sfc_main$l } from './Dialog-BzXGl2GM.mjs';
import './layout-Bel3IrLG.mjs';
import './useToast-m9XhiEp3.mjs';
import '@vue/reactivity';
import '../nitro/nitro.mjs';
import 'node:http';
import 'node:https';
import 'node:events';
import 'node:buffer';
import 'node:fs';
import 'node:path';
import 'node:crypto';
import 'node:url';
import '@iconify/utils';
import 'consola';
import 'node:module';
import 'ipx';
import 'vue-router';
import '@iconify/vue';
import 'perfect-scrollbar';
import 'deep-pick-omit';
import 'dayjs';
import 'dayjs/plugin/customParseFormat.js';
import 'dayjs/locale/es.js';
import 'awesome-phonenumber';
import '@iconify/utils/lib/css/icon';
import 'perfect-debounce';
import '../routes/renderer.mjs';
import 'vue-bundle-renderer/runtime';
import 'unhead/server';
import 'devalue';
import 'unhead/utils';
import 'unhead/plugins';
import './vue-transitions-gDOXGptb.mjs';
import '@morev/utils';
import './main-BplioMC0.mjs';
import 'date-fns';
import './vee-validate-DglmwfQ_.mjs';
import 'yup';
import './filter-PqGpj4I-.mjs';
import './VTable-BTxmY7C0.mjs';
import './VTooltip-BQZt6HQd.mjs';

const _sfc_main$j = /* @__PURE__ */ defineComponent({
  __name: "app-bar-cat-btn",
  __ssrInlineRender: true,
  setup(__props) {
    const { dialog } = storeToRefs(usePlayerStore());
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PrimaryBtn = __nuxt_component_0$2;
      _push(ssrRenderComponent(_component_PrimaryBtn, mergeProps({
        variant: "elevated",
        icon: "futzo-icon:plus",
        text: "Crear Jugador",
        class: "mr-8",
        onClick: ($event) => dialog.value = !unref(dialog)
      }, _attrs), null, _parent));
    };
  }
});
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/app-bar-cat-btn.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
const _sfc_main$i = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
  const _component_SearchInput = __nuxt_component_1;
  _push(ssrRenderComponent(_component_SearchInput, mergeProps({
    "min-width": 300,
    placeholder: "Buscar Jugador",
    class: "mr-4"
  }, _attrs), null, _parent));
}
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/app-bar-search-input.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const SearchInput = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["ssrRender", _sfc_ssrRender$1]]);
const _sfc_main$h = /* @__PURE__ */ defineComponent({
  __name: "import-btn",
  __ssrInlineRender: true,
  setup(__props) {
    const { importModal } = storeToRefs(usePlayerStore());
    return (_ctx, _push, _parent, _attrs) => {
      const _component_SecondaryBtn = _sfc_main$m;
      _push(ssrRenderComponent(_component_SecondaryBtn, mergeProps({
        text: "Importar Jugadores",
        class: "mr-4",
        onBtnClick: ($event) => importModal.value = !unref(importModal)
      }, _attrs), null, _parent));
    };
  }
});
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/import-btn.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const _sfc_main$f = /* @__PURE__ */ defineComponent({
  __name: "players-navbar-buttons",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(SearchInput, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$h, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$j, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/players-navbar-buttons.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const _sfc_main$e = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<svg${ssrRenderAttrs(mergeProps({
    width: "333",
    height: "249",
    viewBox: "0 0 333 249",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _attrs))}><path d="M333 218.5H0V218.667H333V218.5Z" fill="#EBEBEB"></path><path d="M299.633 229.22H289.709V229.386H299.633V229.22Z" fill="#EBEBEB"></path><path d="M220.594 231.027H214.805V231.194H220.594V231.027Z" fill="#EBEBEB"></path><path d="M286.898 223.036H264.127V223.202H286.898V223.036Z" fill="#EBEBEB"></path><path d="M73.0123 226.472H44.2461V226.638H73.0123V226.472Z" fill="#EBEBEB"></path><path d="M89.3178 226.472H78.9434V226.638H89.3178V226.472Z" fill="#EBEBEB"></path><path d="M169.667 224.237H107.279V224.403H169.667V224.237Z" fill="#EBEBEB"></path><path d="M157.85 188.797H29.2451C28.2371 188.796 27.2708 188.395 26.558 187.683C25.8453 186.97 25.4444 186.003 25.4434 184.995V4.22127C25.4448 3.21355 25.8458 2.24754 26.5585 1.5351C27.2712 0.822663 28.2374 0.421965 29.2451 0.420898H157.85C158.858 0.42232 159.824 0.823173 160.536 1.53557C161.248 2.24797 161.649 3.21378 161.651 4.22127V184.993C161.65 186.001 161.25 186.968 160.537 187.681C159.825 188.394 158.858 188.796 157.85 188.797ZM29.2464 0.587535C28.285 0.590371 27.3637 0.973556 26.6839 1.65339C26.0041 2.33323 25.6209 3.25447 25.6181 4.21589V184.993C25.6209 185.954 26.0041 186.875 26.6839 187.555C27.3637 188.235 28.285 188.618 29.2464 188.621H157.852C158.813 188.618 159.734 188.235 160.414 187.555C161.094 186.875 161.477 185.954 161.48 184.993V4.22127C161.477 3.25984 161.094 2.3386 160.414 1.65876C159.734 0.978928 158.813 0.595748 157.852 0.592912L29.2464 0.587535Z" fill="#EBEBEB"></path><path d="M301.906 188.797H173.3C172.293 188.796 171.327 188.395 170.614 187.682C169.902 186.969 169.501 186.003 169.5 184.995V4.22127C169.501 3.21367 169.902 2.24766 170.614 1.53518C171.327 0.822707 172.293 0.421966 173.3 0.420898H301.906C302.913 0.421965 303.879 0.822663 304.592 1.5351C305.305 2.24754 305.706 3.21355 305.707 4.22127V184.993C305.707 186.001 305.306 186.968 304.594 187.682C303.881 188.395 302.914 188.796 301.906 188.797ZM173.3 0.587535C172.339 0.590371 171.418 0.973556 170.738 1.65339C170.058 2.33323 169.675 3.25447 169.672 4.21589V184.993C169.675 185.954 170.058 186.875 170.738 187.555C171.418 188.235 172.339 188.618 173.3 188.621H301.906C302.868 188.62 303.791 188.238 304.472 187.558C305.154 186.878 305.538 185.955 305.541 184.993V4.22127C305.538 3.25868 305.154 2.33643 304.472 1.6564C303.791 0.976373 302.868 0.593975 301.906 0.592912L173.3 0.587535Z" fill="#EBEBEB"></path><path d="M142.84 218.499H155.242V133.337H142.84V218.499Z" fill="#E6E6E6"></path><path d="M147.206 218.499H142.84V202.319H151.783L147.206 218.499Z" fill="#F0F0F0"></path><path d="M273.99 218.499H286.393V133.337H273.99V218.499Z" fill="#E6E6E6"></path><path d="M142.841 214.082L277.801 214.082V133.337H142.841V214.082Z" fill="#F0F0F0"></path><path d="M273.44 218.499H277.806V202.319H268.857L273.44 218.499Z" fill="#F0F0F0"></path><path d="M233.305 140.023V206.817H273.312V140.023H233.305Z" fill="#E6E6E6"></path><path d="M249.352 142.372H257.267C260.617 142.406 263.859 141.187 266.357 138.956H240.264C242.762 141.187 246.003 142.405 249.352 142.372Z" fill="#F0F0F0"></path><path d="M190.314 140.023V206.817H230.322V140.023H190.314Z" fill="#E6E6E6"></path><path d="M205.959 142.372H213.874C217.223 142.406 220.465 141.188 222.962 138.956H196.869C199.367 141.188 202.609 142.406 205.959 142.372Z" fill="#F0F0F0"></path><path d="M147.328 140.023V206.817H187.335V140.023H147.328Z" fill="#E6E6E6"></path><path d="M162.973 142.372H170.888C174.237 142.406 177.479 141.187 179.977 138.956H153.883C156.381 141.187 159.623 142.406 162.973 142.372Z" fill="#F0F0F0"></path><path d="M46.611 218.499H131.232L131.232 28.2758H46.611L46.611 218.499Z" fill="#F0F0F0"></path><path d="M46.6099 218.499H129.445L129.445 28.2758H46.6099L46.6099 218.499Z" fill="#F5F5F5"></path><path d="M124.398 214.182L124.398 32.5923L51.6579 32.5923L51.6579 214.182H124.398Z" fill="#F0F0F0"></path><path d="M117.25 66.3647C117.25 63.7604 116.737 61.1817 115.741 58.7757C114.744 56.3697 113.283 54.1835 111.442 52.3421C109.6 50.5006 107.414 49.0398 105.008 48.0432C102.602 47.0466 100.023 46.5337 97.4191 46.5337H78.6376C73.3781 46.5337 68.334 48.623 64.615 52.3421C60.896 56.0611 58.8066 61.1052 58.8066 66.3647H117.25Z" fill="#FAFAFA"></path><path d="M117.25 202.896V159.514H58.8066V202.896H117.25Z" fill="#F5F5F5"></path><path d="M117.25 78.5957H91.4707V153.916H117.25V78.5957Z" fill="#F5F5F5"></path><path d="M84.5855 78.5957H58.8066V153.916H84.5855V78.5957Z" fill="#F5F5F5"></path><path d="M68.1557 115.917H57.5971C57.163 115.916 56.7469 115.743 56.44 115.436C56.133 115.129 55.96 114.713 55.959 114.279C55.9604 113.845 56.1335 113.429 56.4404 113.122C56.7473 112.815 57.1631 112.642 57.5971 112.641H68.1557C68.5897 112.642 69.0055 112.815 69.3124 113.122C69.6193 113.429 69.7924 113.845 69.7938 114.279C69.7927 114.713 69.6198 115.129 69.3128 115.436C69.0058 115.743 68.5898 115.916 68.1557 115.917Z" fill="#E0E0E0"></path><path d="M52.9668 214.182L52.9668 32.5923H51.6579L51.6579 214.182H52.9668Z" fill="#F0F0F0"></path><path d="M184.754 112.459L274.494 112.459V28.2762L184.754 28.2762V112.459Z" fill="#E6E6E6"></path><path d="M182.49 112.459L272.23 112.459V28.2762L182.49 28.2762V112.459Z" fill="#F5F5F5"></path><path d="M177.253 117.333L274.494 117.333V112.46L177.253 112.46V117.333Z" fill="#E6E6E6"></path><path d="M174.707 117.333L266.939 117.333V112.46L174.707 112.46V117.333Z" fill="#F5F5F5"></path><path d="M268.17 108.081V32.6558L186.551 32.6558V108.081H268.17Z" fill="white"></path><path d="M229.623 108.081V32.6558H225.098V108.081H229.623Z" fill="#F5F5F5"></path><path d="M188.262 108.081V32.6558H186.551V108.081H188.262Z" fill="#E6E6E6"></path><path d="M231.334 108.081V32.6558H229.623V108.081H231.334Z" fill="#E6E6E6"></path><path d="M196.818 114.691C195.167 97.5906 194.018 69.8417 194.911 60.5612C194.926 60.4017 194.975 60.2474 195.055 60.1083C195.135 59.9693 195.243 59.8489 195.373 59.7549C195.545 59.6286 195.75 59.5534 195.963 59.5377C196.176 59.5221 196.39 59.5667 196.579 59.6664C196.768 59.7662 196.925 59.917 197.033 60.1019C197.14 60.2867 197.194 60.498 197.187 60.7117C197.03 65.3103 196.848 76.8042 197.828 96.6325C198.316 106.503 199.019 113.262 198.536 114.688L196.818 114.691Z" fill="#E6E6E6"></path><path d="M190.666 75.2779C185.963 70.0598 176.369 66.3494 166.589 66.3682C162.749 66.3763 178.271 72.4383 184.73 79.1347C189.893 84.6954 194.142 91.0385 197.321 97.9282C196.074 87.7084 195.366 80.4933 190.666 75.2779Z" fill="#E6E6E6"></path><path d="M199.983 76.8664C203.88 71.4319 212.893 67.2526 222.64 66.7796C226.466 66.5941 211.908 73.4141 206.475 80.4047C202.141 86.2476 198.846 92.7938 196.736 99.756C196.451 89.5254 196.08 82.3022 199.983 76.8664Z" fill="#E6E6E6"></path><path d="M190.457 56.2197C186.478 51.8011 178.351 48.6592 170.069 48.6754C166.818 48.6754 179.961 53.8169 185.426 59.4812C189.798 64.1897 193.396 69.5608 196.088 75.3949C195.037 66.7486 194.434 60.6382 190.457 56.2197Z" fill="#E6E6E6"></path><path d="M198.344 62.7545C201.649 58.1519 209.278 54.6136 217.53 54.2131C220.77 54.0559 208.443 59.8303 203.842 65.7499C200.171 70.7 197.381 76.2462 195.595 82.1447C195.356 73.4743 195.04 67.3545 198.344 62.7545Z" fill="#E6E6E6"></path><path d="M197.484 133.337C195.004 133.337 192.618 132.389 190.814 130.686C189.011 128.984 187.927 126.656 187.785 124.18L186.928 109.313H208.039L207.182 124.18C207.04 126.656 205.956 128.984 204.153 130.686C202.35 132.389 199.963 133.337 197.484 133.337Z" fill="#E6E6E6"></path><path d="M209.406 112.693H185.565L184.883 106.512H210.095L209.406 112.693Z" fill="#E6E6E6"></path><path d="M166.502 248.579C237.819 248.579 295.632 245.202 295.632 241.037C295.632 236.872 237.819 233.496 166.502 233.496C95.1848 233.496 37.3711 236.872 37.3711 241.037C37.3711 245.202 95.1848 248.579 166.502 248.579Z" fill="#F5F5F5"></path><path d="M169.106 233.83L163.545 234.457L161.494 221.846L167.055 221.22L169.106 233.83Z" fill="#FFC3BD"></path><path d="M194.002 235.045H188.449L187.066 222.186H192.619L194.002 235.045Z" fill="#FFC3BD"></path><path d="M187.992 234.398H194.761C194.871 234.399 194.978 234.436 195.064 234.505C195.15 234.574 195.21 234.67 195.234 234.777L196.331 239.713C196.357 239.834 196.355 239.958 196.326 240.078C196.297 240.197 196.241 240.308 196.163 240.403C196.085 240.498 195.986 240.574 195.874 240.626C195.763 240.678 195.641 240.703 195.518 240.701C193.339 240.663 191.755 240.536 189.008 240.536C187.32 240.536 182.23 240.71 179.9 240.71C177.615 240.71 177.265 238.406 178.219 238.197C182.497 237.257 185.721 235.971 187.088 234.74C187.337 234.518 187.659 234.396 187.992 234.398Z" fill="#263238"></path><path d="M163.453 233.504L169.479 232.821C169.588 232.808 169.699 232.833 169.792 232.892C169.885 232.951 169.956 233.039 169.992 233.144L171.638 237.924C171.68 238.039 171.694 238.163 171.681 238.285C171.667 238.407 171.626 238.525 171.56 238.628C171.494 238.732 171.405 238.819 171.301 238.884C171.196 238.948 171.078 238.987 170.956 238.999C168.779 239.208 165.623 239.437 162.893 239.747C159.698 240.11 159.166 240.965 155.398 240.877C153.113 240.824 152.541 238.506 153.499 238.324C157.864 237.476 158.708 236.816 162.176 234.094C162.539 233.782 162.981 233.578 163.453 233.504Z" fill="#263238"></path><path d="M168.357 71.8819C166.491 73.4219 164.656 74.7604 162.757 76.1311C160.858 77.5018 158.919 78.7744 156.923 80.0094C154.928 81.2444 152.88 82.4283 150.732 83.5034C148.537 84.6407 146.251 85.5945 143.899 86.355C143.277 86.5539 142.671 86.7178 141.972 86.8925C141.288 87.0407 140.598 87.1515 139.902 87.2245C138.651 87.3589 137.474 87.4193 136.301 87.4731C133.963 87.5806 131.669 87.5779 129.377 87.5618C124.795 87.5067 120.251 87.2863 115.688 86.8831L115.619 82.7172C120.101 82.1407 124.603 81.6422 129.058 81.1409C131.284 80.899 133.506 80.6276 135.676 80.344C136.751 80.1976 137.826 80.0255 138.818 79.8414C139.244 79.7662 139.666 79.667 140.081 79.5444C140.472 79.4101 140.952 79.2569 141.395 79.0781C143.3 78.3049 145.148 77.4006 146.928 76.3716C148.77 75.314 150.614 74.1785 152.425 72.9717C154.237 71.765 156.04 70.5152 157.828 69.2399C159.615 67.9646 161.401 66.614 163.078 65.3428L168.357 71.8819Z" fill="#FFC3BD"></path><path d="M173.786 67.1353C172.988 72.3843 161.936 80.4137 161.936 80.4137L154.008 70.5728C157.481 66.8661 161.164 63.3615 165.038 60.0761C168.606 57.16 174.655 61.424 173.786 67.1353Z" fill="#9155FD"></path><path d="M117.148 83.1568L113.996 80.9126L113.65 88.0027C114.127 88.0039 114.597 87.8885 115.018 87.6664C115.44 87.4443 115.801 87.1224 116.069 86.7287L117.148 83.1568Z" fill="#FFC3BD"></path><path d="M111.149 78.8481L110.504 85.7971L113.654 88.0024L113.999 80.9123L111.149 78.8481Z" fill="#FFC3BD"></path><path opacity="0.2" d="M161.496 221.85L162.552 228.35L168.114 227.724L167.058 221.224L161.496 221.85Z" fill="black"></path><path opacity="0.2" d="M192.622 222.187H187.066L187.781 228.815H193.337L192.622 222.187Z" fill="black"></path><path d="M192.7 60.2444C193.114 60.3372 193.505 60.5117 193.85 60.7577C194.195 61.0038 194.488 61.3164 194.71 61.6771C194.933 62.0379 195.081 62.4395 195.146 62.8583C195.211 63.2772 195.191 63.7048 195.088 64.116C193.884 69.1171 192.975 74.185 192.369 79.2933C191.843 83.5936 191.529 87.7017 191.332 91.4255C190.872 100.154 191.064 106.807 190.803 109.062C186.461 108.761 170.099 107.623 161.177 106.999C158.165 83.4229 161.694 68.3773 163.676 62.2642C163.98 61.3116 164.548 60.4649 165.314 59.8226C166.08 59.1802 167.013 58.7687 168.003 58.6359C169.14 58.4867 170.5 58.3429 171.936 58.2582C172.438 58.226 172.947 58.2085 173.466 58.1978C177.678 58.2476 181.884 58.5402 186.062 59.0739C186.855 59.168 187.656 59.2849 188.435 59.4099C189.993 59.6706 191.474 59.9703 192.7 60.2444Z" fill="#B58DFE"></path><path d="M185.804 44.812C184.729 48.8086 183.414 56.1782 186.062 59.0809C179.195 63.6996 174.811 70.2025 173.547 68.7901C172.884 68.051 172.596 59.4975 173.467 58.202C178.062 57.4387 178.179 54.0778 177.612 50.8741L185.804 44.812Z" fill="#FFC3BD"></path><path d="M185.529 57.4233C185.529 57.4233 174.339 62.3754 172.855 73.4486C175.938 69.8793 182.747 65.9957 182.747 65.9957L179.744 65.1329C181.654 64.408 183.632 63.8759 185.647 63.5445C185.314 62.0152 187.091 58.9647 187.091 58.9647L185.529 57.4233Z" fill="#9155FD"></path><path d="M175.435 57.2451C175.435 57.2451 176.927 63.5692 172.859 73.4491C172.057 70.0007 170.958 66.6285 169.572 63.3703L172.312 64.1162C172.312 64.1162 172.178 62.8409 169.959 61.1449C170.884 59.802 172.037 58.6317 173.366 57.6873L175.435 57.2451Z" fill="#9155FD"></path><path opacity="0.2" d="M182.466 47.2856L177.617 50.871C177.761 51.6171 177.839 52.3743 177.85 53.134C179.597 52.9996 182.096 51.2755 182.407 49.4815C182.559 48.7591 182.579 48.0151 182.466 47.2856Z" fill="black"></path><path d="M171.586 33.2383C168.878 33.3552 167.383 38.0237 170.132 41.8684C172.88 45.7131 175.234 33.081 171.586 33.2383Z" fill="#263238"></path><path d="M184.94 37.3463C185.261 42.848 185.728 46.0504 183.307 49.1855C179.665 53.9011 172.623 52.2105 170.665 46.9158C168.904 42.1506 168.674 33.9545 173.756 31.1392C174.874 30.5124 176.134 30.1819 177.416 30.1792C178.697 30.1765 179.958 30.5016 181.079 31.1236C182.2 31.7456 183.143 32.6439 183.818 33.733C184.494 34.8222 184.88 36.066 184.94 37.3463Z" fill="#FFC3BD"></path><path d="M185.748 41.5743C184.277 40.7119 182.992 39.5655 181.969 38.2018C180.945 36.838 180.203 35.2842 179.786 33.6309C178.173 34.0126 170.136 37.7108 167.664 33.6309C165.193 29.551 168.303 27.1577 172.927 29.6693C170.881 26.0598 172.741 24.2939 179.167 24.1381C185.594 23.9822 184.73 27.7073 184.73 27.7073C184.73 27.7073 189.594 25.5894 191.314 29.3199C193.307 33.6067 189.631 40.9266 185.748 41.5743Z" fill="#263238"></path><path d="M183.631 26.7224C183.69 26.7224 186.065 27.2936 188.801 24.54C188.31 26.8891 184.061 28.4533 184.061 28.4533L183.631 26.7224Z" fill="#263238"></path><path d="M186.823 34.7703C184.26 33.8847 181.158 37.681 182.304 42.2648C183.45 46.8487 190.276 35.9636 186.823 34.7703Z" fill="#263238"></path><path d="M188.271 41.9223C188.037 43.2886 187.27 44.5063 186.14 45.3088C184.634 46.3597 183.276 45.1583 183.184 43.4194C183.106 41.8551 183.794 39.4228 185.55 39.064C185.936 38.9919 186.333 39.0174 186.706 39.138C187.079 39.2586 187.416 39.4705 187.687 39.7545C187.957 40.0385 188.152 40.3856 188.254 40.7642C188.356 41.1428 188.362 41.5409 188.271 41.9223Z" fill="#FFC3BD"></path><path d="M169.525 169.56C170.86 153.318 180.648 108.358 180.648 108.358L161.171 106.999C161.171 106.999 153.66 151.629 153.085 168.567C152.485 186.178 159.569 225.318 159.569 225.318L168.91 224.255C168.91 224.255 168.186 185.869 169.525 169.56Z" fill="#9155FD"></path><path opacity="0.5" d="M169.525 169.56C170.86 153.318 180.648 108.358 180.648 108.358L161.171 106.999C161.171 106.999 153.66 151.629 153.085 168.567C152.485 186.178 159.569 225.318 159.569 225.318L168.91 224.255C168.91 224.255 168.186 185.869 169.525 169.56Z" fill="white"></path><path opacity="0.2" d="M173.313 123.583C169.386 128.604 169.316 146.236 170.835 159.263C172.282 149.866 174.562 137.931 176.561 127.983L173.313 123.583Z" fill="black"></path><path d="M171.682 107.731C171.682 107.731 173.783 155.269 176.128 171.368C178.695 188.998 185.214 227.53 185.214 227.53H195.384C195.384 227.53 193.711 191.238 192.369 173.918C190.841 154.189 190.799 109.064 190.799 109.064L171.682 107.731Z" fill="#9155FD"></path><path opacity="0.5" d="M171.682 107.731C171.682 107.731 173.783 155.269 176.128 171.368C178.695 188.998 185.214 227.53 185.214 227.53H195.384C195.384 227.53 193.711 191.238 192.369 173.918C190.841 154.189 190.799 109.064 190.799 109.064L171.682 107.731Z" fill="white"></path><path d="M183.991 227.747H195.966V224.17L182.58 223.937L183.991 227.747Z" fill="#9155FD"></path><path d="M159.163 226.371L170.296 225.109L169.893 221.511L157.426 222.733L159.163 226.371Z" fill="#9155FD"></path><path d="M176.838 39.8693C176.892 40.3141 176.704 40.7025 176.408 40.7374C176.113 40.7724 175.839 40.4404 175.786 39.9956C175.734 39.5508 175.921 39.1625 176.216 39.1275C176.512 39.0926 176.786 39.4245 176.838 39.8693Z" fill="#263238"></path><path d="M171.813 40.4723C171.866 40.9171 171.678 41.3055 171.383 41.3404C171.087 41.3754 170.813 41.0434 170.759 40.5986C170.705 40.1538 170.894 39.7655 171.189 39.7305C171.485 39.6956 171.759 40.0329 171.813 40.4723Z" fill="#263238"></path><path d="M173.438 40.502C173.071 41.9247 172.51 43.2903 171.771 44.5603C172.101 44.741 172.466 44.8474 172.841 44.8723C173.217 44.8971 173.593 44.8397 173.943 44.7041L173.438 40.502Z" fill="#ED847E"></path><path d="M178.205 38.0563C178.159 38.0704 178.109 38.0715 178.062 38.0594C178.014 38.0473 177.971 38.0226 177.937 37.9878C177.714 37.7434 177.437 37.5551 177.128 37.4383C176.819 37.3215 176.487 37.2796 176.159 37.3159C176.09 37.3274 176.02 37.312 175.963 37.273C175.905 37.2339 175.865 37.1741 175.851 37.1062C175.844 37.0722 175.844 37.0371 175.851 37.0031C175.858 36.969 175.871 36.9367 175.891 36.908C175.91 36.8793 175.935 36.8548 175.965 36.836C175.994 36.8172 176.026 36.8044 176.061 36.7985C176.475 36.7448 176.896 36.7915 177.289 36.9346C177.682 37.0777 178.034 37.3131 178.317 37.6209C178.365 37.671 178.392 37.7377 178.392 37.807C178.392 37.8764 178.365 37.9431 178.317 37.9931C178.286 38.0232 178.247 38.0449 178.205 38.0563Z" fill="#263238"></path><path d="M176.276 46.4779C176.91 46.3445 177.503 46.0604 178.004 45.6497C178.505 45.239 178.9 44.7137 179.156 44.1181C179.168 44.0825 179.166 44.0433 179.15 44.0093C179.133 43.9753 179.104 43.9492 179.068 43.9367C179.033 43.9242 178.994 43.9264 178.96 43.9428C178.926 43.9592 178.9 43.9884 178.887 44.024C178.642 44.5719 178.272 45.0545 177.807 45.4331C177.341 45.8118 176.794 46.0757 176.207 46.2038C176.189 46.2079 176.172 46.2156 176.157 46.2263C176.142 46.2371 176.129 46.2507 176.119 46.2664C176.109 46.2822 176.103 46.2997 176.1 46.318C176.097 46.3363 176.097 46.355 176.101 46.3731C176.105 46.3912 176.113 46.4083 176.124 46.4234C176.135 46.4385 176.148 46.4514 176.164 46.4612C176.18 46.4711 176.197 46.4777 176.215 46.4808C176.234 46.4839 176.252 46.4834 176.271 46.4792L176.276 46.4779Z" fill="#263238"></path><path d="M169.451 39.0025C169.399 39.0201 169.342 39.0201 169.289 39.0025C169.224 38.9785 169.171 38.9302 169.14 38.8679C169.11 38.8055 169.105 38.7339 169.126 38.6679C169.252 38.2693 169.473 37.907 169.769 37.6117C170.064 37.3165 170.427 37.097 170.826 36.972C170.894 36.9567 170.964 36.968 171.024 37.0036C171.083 37.0391 171.126 37.0961 171.145 37.1628C171.16 37.2301 171.149 37.3006 171.114 37.3599C171.078 37.4192 171.022 37.4627 170.955 37.4813C170.642 37.5859 170.357 37.7635 170.126 37.9994C169.894 38.2354 169.722 38.523 169.623 38.8386C169.609 38.8772 169.586 38.9122 169.557 38.9406C169.527 38.969 169.491 38.9902 169.451 39.0025Z" fill="#263238"></path><path d="M186.164 235.369C185.784 235.399 185.405 235.299 185.089 235.085C184.991 235.001 184.915 234.893 184.868 234.772C184.821 234.651 184.805 234.52 184.82 234.391C184.82 234.314 184.841 234.239 184.881 234.173C184.921 234.107 184.978 234.054 185.046 234.019C185.663 233.701 187.451 234.803 187.653 234.93C187.675 234.944 187.693 234.964 187.703 234.988C187.714 235.012 187.718 235.038 187.714 235.064C187.709 235.09 187.697 235.113 187.68 235.132C187.662 235.152 187.639 235.165 187.614 235.172C187.14 235.291 186.653 235.357 186.164 235.369ZM185.339 234.22C185.28 234.217 185.222 234.228 185.168 234.252C185.141 234.267 185.119 234.29 185.104 234.317C185.089 234.345 185.083 234.376 185.085 234.407C185.073 234.495 185.083 234.585 185.114 234.668C185.145 234.751 185.197 234.825 185.264 234.884C185.884 235.167 186.589 235.203 187.235 234.983C186.656 234.608 186.01 234.349 185.332 234.22H185.339Z" fill="#9155FD"></path><path d="M187.577 235.174C187.555 235.174 187.534 235.168 187.514 235.158C186.941 234.846 185.829 233.628 185.946 233.007C185.965 232.91 186.017 232.823 186.093 232.76C186.17 232.697 186.265 232.663 186.364 232.662C186.464 232.65 186.566 232.659 186.662 232.688C186.758 232.717 186.848 232.766 186.924 232.831C187.569 233.359 187.702 234.961 187.707 235.029C187.708 235.052 187.704 235.076 187.693 235.097C187.683 235.118 187.667 235.136 187.647 235.149C187.627 235.164 187.603 235.172 187.577 235.174ZM186.457 232.923H186.396C186.226 232.944 186.211 233.022 186.204 233.057C186.134 233.423 186.842 234.342 187.414 234.776C187.376 234.141 187.147 233.532 186.758 233.029C186.673 232.959 186.566 232.922 186.457 232.923Z" fill="#9155FD"></path><path d="M163.001 234.325L162.979 234.334C162.11 234.613 160.554 235.006 159.889 234.541C159.79 234.474 159.71 234.383 159.655 234.277C159.6 234.171 159.571 234.053 159.571 233.934C159.566 233.862 159.58 233.79 159.61 233.725C159.641 233.659 159.688 233.603 159.747 233.562C160.372 233.122 162.72 233.986 162.986 234.087C163.009 234.097 163.028 234.113 163.043 234.133C163.057 234.154 163.065 234.177 163.067 234.202C163.068 234.227 163.063 234.252 163.051 234.274C163.04 234.296 163.022 234.314 163.001 234.326V234.325ZM159.933 233.755L159.902 233.774C159.878 233.79 159.859 233.813 159.847 233.839C159.835 233.865 159.831 233.895 159.835 233.923C159.833 234.002 159.851 234.08 159.887 234.15C159.922 234.221 159.975 234.281 160.039 234.326C160.856 234.581 161.738 234.534 162.523 234.192C161.709 233.831 160.818 233.681 159.932 233.755H159.933Z" fill="#9155FD"></path><path d="M162.999 234.325C162.968 234.341 162.931 234.344 162.897 234.333C162.198 234.11 160.747 233.066 160.774 232.432C160.781 232.282 160.865 232.088 161.22 232.011C161.348 231.982 161.481 231.98 161.61 232.005C161.739 232.029 161.861 232.08 161.97 232.153C162.539 232.698 162.923 233.408 163.066 234.183C163.071 234.205 163.07 234.228 163.063 234.25C163.055 234.272 163.043 234.292 163.026 234.308C163.018 234.314 163.009 234.32 162.999 234.325ZM161.13 232.323C161.04 232.371 161.037 232.427 161.036 232.449C161.017 232.831 162.02 233.667 162.747 233.997C162.612 233.378 162.291 232.815 161.826 232.385C161.747 232.33 161.657 232.292 161.562 232.273C161.467 232.255 161.369 232.257 161.275 232.278C161.225 232.286 161.176 232.301 161.13 232.323Z" fill="#9155FD"></path><path d="M197.385 68.2531C197.244 70.4221 196.988 72.4418 196.724 74.5275C196.459 76.6131 196.103 78.6571 195.712 80.7199C194.938 84.9331 193.795 89.0701 192.297 93.0832L191.637 94.638L191.47 95.0264L191.429 95.1231L191.36 95.2709L191.167 95.6539C190.911 96.1193 190.604 96.5547 190.252 96.9521C189.672 97.604 188.995 98.1617 188.244 98.605C187.636 98.967 186.998 99.2768 186.337 99.5309C184.136 100.325 181.834 100.805 179.5 100.958C175.26 101.275 170.999 101.116 166.795 100.484L166.947 96.3178L169.884 95.9858C170.869 95.8689 171.849 95.7171 172.823 95.5827C174.768 95.2965 176.692 94.9766 178.527 94.5506C180.223 94.2052 181.873 93.6584 183.44 92.9219C183.862 92.7443 184.232 92.4617 184.515 92.1008C184.532 92.0054 184.32 92.4233 184.57 91.7555L185.009 90.4707C186.086 86.7878 186.909 83.0355 187.474 79.2403C187.79 77.3079 188.06 75.358 188.32 73.4027C188.581 71.4474 188.796 69.4518 189.002 67.5771L197.385 68.2531Z" fill="#FFC3BD"></path><path d="M197.869 64.227C200.587 68.7866 198.272 83.1173 198.272 83.1173L184.027 80.4847C184.027 80.4847 183.256 72.2873 185.968 65.9793C188.912 59.1137 194.575 58.7025 197.869 64.227Z" fill="#9155FD"></path><path d="M162.959 109.206L155.4 74.0461C155.037 72.5446 154.196 71.2018 153.003 70.2201C151.811 69.2384 150.331 68.671 148.788 68.6035H119.824C121.368 68.6708 122.847 69.238 124.04 70.2197C125.233 71.2015 126.074 72.5444 126.437 74.0461L133.996 109.206C134.359 110.708 135.2 112.05 136.393 113.032C137.585 114.014 139.065 114.581 140.608 114.649H169.57C168.027 114.581 166.548 114.014 165.355 113.032C164.163 112.05 163.322 110.708 162.959 109.206Z" fill="#263238"></path><path opacity="0.7" d="M162.959 109.206L155.4 74.0461C155.037 72.5446 154.196 71.2018 153.003 70.2201C151.811 69.2384 150.331 68.671 148.788 68.6035H119.824C121.368 68.6708 122.847 69.238 124.04 70.2197C125.233 71.2015 126.074 72.5444 126.437 74.0461L133.996 109.206C134.359 110.708 135.2 112.05 136.393 113.032C137.585 114.014 139.065 114.581 140.608 114.649H169.57C168.027 114.581 166.548 114.014 165.355 113.032C164.163 112.05 163.322 110.708 162.959 109.206Z" fill="#9155FD"></path><path d="M119.824 68.6035H148.786C147.303 68.6313 145.882 69.1997 144.788 70.2019C143.695 71.2041 143.005 72.5712 142.849 74.0461L135.336 155.751C135.179 157.226 134.489 158.593 133.396 159.595C132.303 160.597 130.881 161.166 129.399 161.194H111.321C110.625 161.207 109.934 161.071 109.294 160.795C108.655 160.519 108.082 160.11 107.613 159.595C107.145 159.079 106.792 158.47 106.578 157.807C106.364 157.144 106.294 156.443 106.373 155.751L113.888 74.0461C114.044 72.5714 114.734 71.2046 115.827 70.2024C116.92 69.2002 118.341 68.6316 119.824 68.6035Z" fill="#9155FD"></path><path d="M124.451 155.75C124.372 156.442 124.442 157.143 124.656 157.806C124.87 158.468 125.223 159.078 125.691 159.593C126.16 160.109 126.733 160.518 127.372 160.794C128.012 161.069 128.703 161.205 129.399 161.193H100.437C99.7404 161.206 99.0492 161.07 98.4096 160.794C97.77 160.518 97.1967 160.109 96.7282 159.594C96.2596 159.078 95.9067 158.469 95.6929 157.806C95.4791 157.143 95.4095 156.442 95.4887 155.75H124.451Z" fill="#263238"></path><path opacity="0.7" d="M124.451 155.75C124.372 156.442 124.442 157.143 124.656 157.806C124.87 158.468 125.223 159.078 125.691 159.593C126.16 160.109 126.733 160.518 127.372 160.794C128.012 161.069 128.703 161.205 129.399 161.193H100.437C99.7404 161.206 99.0492 161.07 98.4096 160.794C97.77 160.518 97.1967 160.109 96.7282 159.594C96.2596 159.078 95.9067 158.469 95.6929 157.806C95.4791 157.143 95.4095 156.442 95.4887 155.75H124.451Z" fill="#9155FD"></path><g opacity="0.5"><path opacity="0.5" d="M137.831 77.7578H118.232C118.081 77.7599 117.931 77.7298 117.792 77.6694C117.653 77.6091 117.529 77.5199 117.427 77.4078C117.325 77.2957 117.249 77.1632 117.202 77.0192C117.156 76.8752 117.14 76.723 117.157 76.5726C117.192 76.2517 117.342 75.9545 117.58 75.7364C117.818 75.5183 118.127 75.3942 118.45 75.3873H138.046C138.197 75.3852 138.347 75.4154 138.486 75.4757C138.625 75.5361 138.749 75.6253 138.851 75.7374C138.952 75.8495 139.029 75.9819 139.075 76.1259C139.122 76.2699 139.137 76.4222 139.121 76.5726C139.086 76.893 138.936 77.1898 138.699 77.4079C138.461 77.6259 138.153 77.7503 137.831 77.7578Z" fill="white"></path><path opacity="0.5" d="M137.249 84.1694H117.65C117.499 84.1715 117.349 84.1414 117.21 84.081C117.071 84.0207 116.947 83.9315 116.845 83.8194C116.743 83.7073 116.667 83.5748 116.62 83.4308C116.574 83.2868 116.558 83.1346 116.575 82.9842C116.61 82.6633 116.76 82.3661 116.998 82.148C117.236 81.9299 117.545 81.8059 117.868 81.7989H137.466C137.618 81.7969 137.768 81.827 137.906 81.8873C138.045 81.9477 138.17 82.0369 138.271 82.149C138.373 82.2611 138.45 82.3935 138.496 82.5375C138.543 82.6815 138.558 82.8338 138.541 82.9842C138.507 83.3051 138.356 83.6025 138.118 83.8207C137.881 84.0388 137.571 84.1628 137.249 84.1694Z" fill="white"></path><path opacity="0.5" d="M131.858 90.5806H117.064C116.913 90.5827 116.763 90.5525 116.624 90.4922C116.485 90.4318 116.361 90.3426 116.259 90.2305C116.157 90.1184 116.081 89.986 116.034 89.842C115.988 89.698 115.972 89.5457 115.989 89.3953C116.024 89.0745 116.174 88.7773 116.412 88.5592C116.65 88.3411 116.959 88.217 117.282 88.2101H132.076C132.227 88.208 132.377 88.2381 132.516 88.2985C132.655 88.3588 132.779 88.448 132.881 88.5601C132.983 88.6722 133.059 88.8047 133.106 88.9487C133.153 89.0927 133.168 89.2449 133.151 89.3953C133.116 89.7162 132.966 90.0134 132.728 90.2315C132.49 90.4496 132.181 90.5737 131.858 90.5806Z" fill="white"></path><path opacity="0.5" d="M121.501 96.9908H116.484C116.333 96.9928 116.183 96.9627 116.044 96.9023C115.905 96.842 115.781 96.7528 115.679 96.6407C115.577 96.5286 115.501 96.3962 115.454 96.2522C115.408 96.1082 115.392 95.9559 115.409 95.8055C115.443 95.4848 115.594 95.1876 115.831 94.9694C116.069 94.7513 116.378 94.6272 116.7 94.6202H121.718C121.87 94.6181 122.02 94.6483 122.158 94.7086C122.297 94.769 122.422 94.8582 122.523 94.9703C122.625 95.0824 122.702 95.2148 122.748 95.3588C122.795 95.5028 122.81 95.6551 122.793 95.8055C122.758 96.1263 122.608 96.4235 122.37 96.6416C122.132 96.8597 121.823 96.9838 121.501 96.9908Z" fill="white"></path><path opacity="0.5" d="M135.498 103.402H115.894C115.743 103.404 115.593 103.374 115.454 103.314C115.315 103.254 115.191 103.164 115.089 103.052C114.988 102.94 114.911 102.808 114.864 102.664C114.818 102.52 114.802 102.368 114.819 102.217C114.854 101.896 115.004 101.599 115.242 101.381C115.48 101.163 115.789 101.039 116.112 101.032H135.71C135.862 101.03 136.012 101.06 136.151 101.12C136.289 101.181 136.414 101.27 136.515 101.382C136.617 101.494 136.694 101.626 136.74 101.77C136.787 101.914 136.802 102.067 136.785 102.217C136.751 102.537 136.601 102.834 136.364 103.052C136.128 103.269 135.82 103.394 135.498 103.402Z" fill="white"></path><path opacity="0.5" d="M127.196 109.814H115.316C115.165 109.816 115.015 109.785 114.876 109.725C114.737 109.665 114.613 109.576 114.511 109.463C114.409 109.351 114.333 109.219 114.286 109.075C114.24 108.931 114.224 108.779 114.241 108.628C114.275 108.308 114.426 108.01 114.663 107.792C114.901 107.574 115.21 107.45 115.532 107.443H127.412C127.563 107.441 127.713 107.471 127.852 107.531C127.991 107.592 128.115 107.681 128.217 107.793C128.319 107.905 128.395 108.038 128.442 108.182C128.488 108.326 128.504 108.478 128.487 108.628C128.452 108.949 128.302 109.246 128.064 109.464C127.827 109.682 127.518 109.806 127.196 109.814Z" fill="white"></path><path opacity="0.5" d="M134.333 116.224H114.734C114.583 116.226 114.433 116.196 114.294 116.135C114.155 116.075 114.031 115.986 113.929 115.874C113.827 115.762 113.751 115.629 113.704 115.485C113.658 115.341 113.642 115.189 113.659 115.038C113.694 114.718 113.844 114.42 114.082 114.202C114.32 113.984 114.629 113.86 114.952 113.853H134.552C134.703 113.851 134.853 113.881 134.992 113.942C135.131 114.002 135.255 114.091 135.357 114.203C135.458 114.315 135.535 114.448 135.581 114.592C135.628 114.736 135.643 114.888 135.627 115.038C135.592 115.359 135.441 115.657 135.203 115.875C134.965 116.093 134.655 116.217 134.333 116.224Z" fill="white"></path><path opacity="0.5" d="M128.946 122.635H114.152C114.001 122.637 113.851 122.607 113.712 122.547C113.573 122.487 113.449 122.397 113.347 122.285C113.245 122.173 113.169 122.041 113.122 121.897C113.076 121.753 113.06 121.6 113.077 121.45C113.112 121.129 113.262 120.832 113.5 120.614C113.738 120.396 114.047 120.272 114.37 120.265H129.164C129.315 120.263 129.465 120.293 129.604 120.353C129.743 120.414 129.867 120.503 129.969 120.615C130.071 120.727 130.147 120.859 130.194 121.003C130.24 121.147 130.256 121.3 130.239 121.45C130.204 121.771 130.054 122.068 129.816 122.286C129.578 122.504 129.269 122.628 128.946 122.635Z" fill="white"></path><path opacity="0.5" d="M118.587 129.045H113.566C113.415 129.048 113.265 129.017 113.126 128.957C112.987 128.897 112.863 128.807 112.761 128.695C112.659 128.583 112.583 128.451 112.536 128.307C112.49 128.163 112.474 128.011 112.491 127.86C112.526 127.539 112.676 127.242 112.914 127.024C113.152 126.806 113.461 126.682 113.784 126.675H118.807C118.958 126.673 119.108 126.703 119.247 126.763C119.386 126.824 119.51 126.913 119.612 127.025C119.714 127.137 119.79 127.27 119.837 127.414C119.883 127.558 119.899 127.71 119.882 127.86C119.847 128.181 119.696 128.479 119.458 128.697C119.22 128.915 118.91 129.039 118.587 129.045Z" fill="white"></path><path opacity="0.5" d="M132.583 135.458H112.984C112.833 135.46 112.683 135.43 112.544 135.37C112.405 135.309 112.281 135.22 112.179 135.108C112.077 134.996 112.001 134.863 111.954 134.719C111.908 134.575 111.892 134.423 111.909 134.273C111.944 133.952 112.094 133.655 112.332 133.437C112.57 133.219 112.879 133.094 113.202 133.088H132.8C132.952 133.085 133.102 133.116 133.24 133.176C133.379 133.236 133.504 133.325 133.605 133.438C133.707 133.55 133.784 133.682 133.83 133.826C133.877 133.97 133.892 134.122 133.875 134.273C133.84 134.594 133.69 134.891 133.452 135.109C133.214 135.327 132.905 135.451 132.583 135.458Z" fill="white"></path><path opacity="0.5" d="M124.283 141.868H112.404C112.253 141.87 112.103 141.84 111.964 141.78C111.825 141.719 111.701 141.63 111.599 141.518C111.497 141.406 111.421 141.274 111.374 141.13C111.327 140.986 111.312 140.833 111.329 140.683C111.363 140.362 111.514 140.065 111.752 139.846C111.99 139.628 112.299 139.504 112.622 139.498H124.5C124.651 139.496 124.801 139.526 124.94 139.586C125.079 139.646 125.203 139.736 125.305 139.848C125.406 139.96 125.483 140.092 125.53 140.236C125.576 140.38 125.592 140.533 125.575 140.683C125.54 141.004 125.39 141.301 125.152 141.519C124.915 141.737 124.606 141.861 124.283 141.868Z" fill="white"></path><path opacity="0.5" d="M131.416 148.28H111.818C111.667 148.282 111.517 148.252 111.378 148.191C111.239 148.131 111.115 148.042 111.013 147.93C110.911 147.818 110.835 147.685 110.788 147.541C110.742 147.397 110.726 147.245 110.743 147.095C110.778 146.774 110.928 146.477 111.166 146.258C111.404 146.04 111.713 145.916 112.036 145.909H131.632C131.783 145.907 131.933 145.937 132.072 145.998C132.21 146.058 132.335 146.147 132.436 146.259C132.538 146.371 132.615 146.504 132.661 146.648C132.708 146.792 132.723 146.944 132.707 147.095C132.672 147.415 132.522 147.712 132.284 147.93C132.047 148.148 131.739 148.272 131.416 148.28Z" fill="white"></path></g><path d="M168.655 96.7721L164.4 93.0752L162.406 99.8804C162.406 99.8804 166.728 102.224 168.225 100.073L168.655 96.7721Z" fill="#FFC3BD"></path><path d="M159.765 92.8091L158.381 98.5123L162.402 99.883L164.396 93.0765L159.765 92.8091Z" fill="#FFC3BD"></path></svg>`);
}
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/NoPlayersSvg.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const NoPlayersSVG = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["ssrRender", _sfc_ssrRender]]);
const _sfc_main$d = /* @__PURE__ */ defineComponent({
  __name: "no-players",
  __ssrInlineRender: true,
  setup(__props) {
    const { dialog, players, noPlayers } = storeToRefs(usePlayerStore());
    const toggleDialog = () => {
      dialog.value = !dialog.value;
    };
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(noPlayers)) {
        _push(ssrRenderComponent(VSheet, mergeProps({ class: "custom-v-sheet d-flex justify-center align-center fill-height" }, _attrs), {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="d-flex flex-column align-center"${_scopeId}><h2 class="card-title"${_scopeId}>No hay jugadores a\xFAn</h2>`);
              _push2(ssrRenderComponent(NoPlayersSVG, null, null, _parent2, _scopeId));
              _push2(`<p class="card-sub-title"${_scopeId}>Crea un jugador para verlo aqu\xED.</p>`);
              _push2(ssrRenderComponent(VBtn, {
                color: "primary",
                variant: "elevated",
                class: "mt-4 text-body-1",
                onClick: toggleDialog
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Crear jugador `);
                  } else {
                    return [
                      createTextVNode(" Crear jugador ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "d-flex flex-column align-center" }, [
                  createVNode("h2", { class: "card-title" }, "No hay jugadores a\xFAn"),
                  createVNode(NoPlayersSVG),
                  createVNode("p", { class: "card-sub-title" }, "Crea un jugador para verlo aqu\xED."),
                  createVNode(VBtn, {
                    color: "primary",
                    variant: "elevated",
                    class: "mt-4 text-body-1",
                    onClick: toggleDialog
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Crear jugador ")
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/no-players.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const _sfc_main$c = /* @__PURE__ */ defineComponent({
  __name: "header",
  __ssrInlineRender: true,
  setup(__props) {
    const { dialog, isEdition } = storeToRefs(usePlayerStore());
    const title = isEdition.value ? "Editar jugador" : "Crear un jugador";
    const subtitle = isEdition.value ? "Modifica los detalles del jugador." : "Completa los detalles del jugador.";
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Icon = __nuxt_component_0;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(VCardItem, null, {
        prepend: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VSheet, {
              border: "primary thin",
              class: "mx-auto d-flex justify-center align-center mr-2 rounded-lg",
              height: "45",
              width: "45"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Icon, { name: "futzo-icon:football" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Icon, { name: "futzo-icon:football" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VSheet, {
                border: "primary thin",
                class: "mx-auto d-flex justify-center align-center mr-2 rounded-lg",
                height: "45",
                width: "45"
              }, {
                default: withCtx(() => [
                  createVNode(_component_Icon, { name: "futzo-icon:football" })
                ]),
                _: 1
              })
            ];
          }
        }),
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class=""${_scopeId}>${ssrInterpolate(unref(title))}</span>`);
          } else {
            return [
              createVNode("span", { class: "" }, toDisplayString(unref(title)), 1)
            ];
          }
        }),
        subtitle: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(unref(subtitle))}`);
          } else {
            return [
              createTextVNode(toDisplayString(unref(subtitle)), 1)
            ];
          }
        }),
        append: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Icon, {
              name: "futzo-icon:x-dialog",
              onClick: ($event) => dialog.value = false
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Icon, {
                name: "futzo-icon:x-dialog",
                onClick: ($event) => dialog.value = false
              }, null, 8, ["onClick"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(VDivider, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/dialog/header.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const _sfc_main$b = /* @__PURE__ */ defineComponent({
  __name: "01-basic-info",
  __ssrInlineRender: true,
  setup(__props, { expose: __expose }) {
    const { isEdition, playerStoreRequest } = storeToRefs(usePlayerStore());
    const { teams } = storeToRefs(useTeamStore());
    const { categories } = storeToRefs(useCategoryStore());
    const { handleSubmit, fields, validate } = useSchemas(
      isEdition.value ? "edit-player-basic-info" : "create-player-basic-info",
      { nationality: "Mexicana" }
    );
    const updateCategory = (teamId) => {
      var _a;
      const team = (_a = teams.value) == null ? void 0 : _a.find((team2) => team2.id === teamId);
      if (team) {
        fields.category_id.fieldValue = team.category.id;
      }
    };
    __expose({
      validate,
      handleSubmit
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_BaseInput = _sfc_main$n;
      const _component_BaseCalendarInput = _sfc_main$o;
      _push(ssrRenderComponent(VContainer, mergeProps({ class: "pt-0" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_BaseInput, {
              label: "Nombre(s) del jugador*",
              placeholder: "p.ej. Cristiano",
              modelValue: unref(fields).name,
              "onUpdate:modelValue": ($event) => unref(fields).name = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, {
              placeholder: "p.ej. Ronaldo",
              label: "Apellido(s) del jugador*",
              modelValue: unref(fields).last_name,
              "onUpdate:modelValue": ($event) => unref(fields).last_name = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, { label: "Fecha de nacimiento*" }, {
              input: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_BaseCalendarInput, {
                    start_date: unref(fields).birthdate.fieldValue,
                    "onUpdate:start_date": ($event) => unref(fields).birthdate.fieldValue = $event,
                    multiCalendar: false
                  }, null, _parent3, _scopeId2));
                  _push3(`<span class="text-error ml-4 text-caption"${_scopeId2}>${ssrInterpolate(unref(fields).birthdate.fieldPropsValue["error-messages"][0])}</span>`);
                } else {
                  return [
                    createVNode(_component_BaseCalendarInput, {
                      start_date: unref(fields).birthdate.fieldValue,
                      "onUpdate:start_date": ($event) => unref(fields).birthdate.fieldValue = $event,
                      multiCalendar: false
                    }, null, 8, ["start_date", "onUpdate:start_date"]),
                    createVNode("span", { class: "text-error ml-4 text-caption" }, toDisplayString(unref(fields).birthdate.fieldPropsValue["error-messages"][0]), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, {
              modelValue: unref(fields).nationality,
              "onUpdate:modelValue": ($event) => unref(fields).nationality = $event,
              label: "Nacionalidad*",
              placeholder: "p.ej. Mexicana"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, { label: "Imagen del jugador" }, {
              input: withCtx((_2, _push3, _parent3, _scopeId2) => {
                var _a, _b;
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$p, {
                    modelValue: unref(fields).image.fieldValue,
                    "onUpdate:modelValue": ($event) => unref(fields).image.fieldValue = $event
                  }, null, _parent3, _scopeId2));
                  _push3(`<span class="${ssrRenderClass([
                    unref(fields).image.fieldPropsValue["error-messages"][0] ? "ml-2" : "",
                    "text-error text-caption"
                  ])}"${_scopeId2}>${ssrInterpolate((_a = unref(fields).image.fieldPropsValue["error-messages"][0]) != null ? _a : "")}</span>`);
                } else {
                  return [
                    createVNode(_sfc_main$p, {
                      modelValue: unref(fields).image.fieldValue,
                      "onUpdate:modelValue": ($event) => unref(fields).image.fieldValue = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode("span", {
                      class: [
                        "text-error text-caption",
                        unref(fields).image.fieldPropsValue["error-messages"][0] ? "ml-2" : ""
                      ]
                    }, toDisplayString((_b = unref(fields).image.fieldPropsValue["error-messages"][0]) != null ? _b : ""), 3)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, { label: "Equipo" }, {
              input: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VAutocomplete, mergeProps({
                    "item-value": "id",
                    "item-title": "name",
                    modelValue: unref(fields).team_id.fieldValue,
                    "onUpdate:modelValue": ($event) => unref(fields).team_id.fieldValue = $event,
                    density: "compact"
                  }, unref(fields).team_id.fieldPropsValue, {
                    items: unref(teams),
                    "onUpdate:modelValue": updateCategory
                  }), null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VAutocomplete, mergeProps({
                      "item-value": "id",
                      "item-title": "name",
                      modelValue: unref(fields).team_id.fieldValue,
                      "onUpdate:modelValue": ($event) => unref(fields).team_id.fieldValue = $event,
                      density: "compact"
                    }, unref(fields).team_id.fieldPropsValue, {
                      items: unref(teams),
                      "onUpdate:modelValue": updateCategory
                    }), null, 16, ["modelValue", "onUpdate:modelValue", "items"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_BaseInput, { label: "Categor\xEDa" }, {
              input: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VSelect, mergeProps({
                    "item-value": "id",
                    "item-title": "name",
                    modelValue: unref(fields).category_id.fieldValue,
                    "onUpdate:modelValue": ($event) => unref(fields).category_id.fieldValue = $event,
                    density: "compact",
                    disabled: ""
                  }, unref(fields).category_id.fieldPropsValue, { items: unref(categories) }), null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VSelect, mergeProps({
                      "item-value": "id",
                      "item-title": "name",
                      modelValue: unref(fields).category_id.fieldValue,
                      "onUpdate:modelValue": ($event) => unref(fields).category_id.fieldValue = $event,
                      density: "compact",
                      disabled: ""
                    }, unref(fields).category_id.fieldPropsValue, { items: unref(categories) }), null, 16, ["modelValue", "onUpdate:modelValue", "items"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_BaseInput, {
                label: "Nombre(s) del jugador*",
                placeholder: "p.ej. Cristiano",
                modelValue: unref(fields).name,
                "onUpdate:modelValue": ($event) => unref(fields).name = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode(_component_BaseInput, {
                placeholder: "p.ej. Ronaldo",
                label: "Apellido(s) del jugador*",
                modelValue: unref(fields).last_name,
                "onUpdate:modelValue": ($event) => unref(fields).last_name = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode(_component_BaseInput, { label: "Fecha de nacimiento*" }, {
                input: withCtx(() => [
                  createVNode(_component_BaseCalendarInput, {
                    start_date: unref(fields).birthdate.fieldValue,
                    "onUpdate:start_date": ($event) => unref(fields).birthdate.fieldValue = $event,
                    multiCalendar: false
                  }, null, 8, ["start_date", "onUpdate:start_date"]),
                  createVNode("span", { class: "text-error ml-4 text-caption" }, toDisplayString(unref(fields).birthdate.fieldPropsValue["error-messages"][0]), 1)
                ]),
                _: 1
              }),
              createVNode(_component_BaseInput, {
                modelValue: unref(fields).nationality,
                "onUpdate:modelValue": ($event) => unref(fields).nationality = $event,
                label: "Nacionalidad*",
                placeholder: "p.ej. Mexicana"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode(_component_BaseInput, { label: "Imagen del jugador" }, {
                input: withCtx(() => {
                  var _a;
                  return [
                    createVNode(_sfc_main$p, {
                      modelValue: unref(fields).image.fieldValue,
                      "onUpdate:modelValue": ($event) => unref(fields).image.fieldValue = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode("span", {
                      class: [
                        "text-error text-caption",
                        unref(fields).image.fieldPropsValue["error-messages"][0] ? "ml-2" : ""
                      ]
                    }, toDisplayString((_a = unref(fields).image.fieldPropsValue["error-messages"][0]) != null ? _a : ""), 3)
                  ];
                }),
                _: 1
              }),
              createVNode(_component_BaseInput, { label: "Equipo" }, {
                input: withCtx(() => [
                  createVNode(VAutocomplete, mergeProps({
                    "item-value": "id",
                    "item-title": "name",
                    modelValue: unref(fields).team_id.fieldValue,
                    "onUpdate:modelValue": ($event) => unref(fields).team_id.fieldValue = $event,
                    density: "compact"
                  }, unref(fields).team_id.fieldPropsValue, {
                    items: unref(teams),
                    "onUpdate:modelValue": updateCategory
                  }), null, 16, ["modelValue", "onUpdate:modelValue", "items"])
                ]),
                _: 1
              }),
              createVNode(_component_BaseInput, { label: "Categor\xEDa" }, {
                input: withCtx(() => [
                  createVNode(VSelect, mergeProps({
                    "item-value": "id",
                    "item-title": "name",
                    modelValue: unref(fields).category_id.fieldValue,
                    "onUpdate:modelValue": ($event) => unref(fields).category_id.fieldValue = $event,
                    density: "compact",
                    disabled: ""
                  }, unref(fields).category_id.fieldPropsValue, { items: unref(categories) }), null, 16, ["modelValue", "onUpdate:modelValue", "items"])
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/stepper/01-basic-info.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
const _sfc_main$a = /* @__PURE__ */ defineComponent({
  __name: "02-details-info",
  __ssrInlineRender: true,
  setup(__props, { expose: __expose }) {
    const { isEdition, playerStoreRequest } = storeToRefs(usePlayerStore());
    const { teams } = storeToRefs(useTeamStore());
    const { handleSubmit, fields, validate } = useSchemas(
      isEdition.value ? "edit-player-details-info" : "create-player-details-info"
    );
    const { positions } = storeToRefs(usePositionsStore());
    __expose({
      validate,
      handleSubmit
    });
    const dominatedFootHandler = (value) => {
      fields.dominant_foot.fieldValue = value;
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(VContainer, mergeProps({ class: "pt-0" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Posici\xF3n</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Posici\xF3n")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VSelect, mergeProps({
                          items: unref(positions),
                          placeholder: "p.ej. Ronaldo",
                          outlined: "",
                          "item-value": "id",
                          "item-props": (item) => ({ title: item.abbr, subtitle: item.name }),
                          modelValue: unref(fields).position_id.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).position_id.fieldValue = $event
                        }, unref(fields).position_id.fieldPropsValue, { density: "compact" }), null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VSelect, mergeProps({
                            items: unref(positions),
                            placeholder: "p.ej. Ronaldo",
                            outlined: "",
                            "item-value": "id",
                            "item-props": (item) => ({ title: item.abbr, subtitle: item.name }),
                            modelValue: unref(fields).position_id.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).position_id.fieldValue = $event
                          }, unref(fields).position_id.fieldPropsValue, { density: "compact" }), null, 16, ["items", "item-props", "modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Posici\xF3n")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VSelect, mergeProps({
                          items: unref(positions),
                          placeholder: "p.ej. Ronaldo",
                          outlined: "",
                          "item-value": "id",
                          "item-props": (item) => ({ title: item.abbr, subtitle: item.name }),
                          modelValue: unref(fields).position_id.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).position_id.fieldValue = $event
                        }, unref(fields).position_id.fieldPropsValue, { density: "compact" }), null, 16, ["items", "item-props", "modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Jersey/Camiseta</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Jersey/Camiseta")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8",
                    classs: "position-relative"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextField, mergeProps({
                          modelValue: unref(fields).number.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).number.fieldValue = $event
                        }, unref(fields).number.fieldPropsValue, {
                          type: "number",
                          placeholder: "p.ej. 12+1",
                          min: "1"
                        }), null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextField, mergeProps({
                            modelValue: unref(fields).number.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).number.fieldValue = $event
                          }, unref(fields).number.fieldPropsValue, {
                            type: "number",
                            placeholder: "p.ej. 12+1",
                            min: "1"
                          }), null, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Jersey/Camiseta")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8",
                      classs: "position-relative"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextField, mergeProps({
                          modelValue: unref(fields).number.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).number.fieldValue = $event
                        }, unref(fields).number.fieldPropsValue, {
                          type: "number",
                          placeholder: "p.ej. 12+1",
                          min: "1"
                        }), null, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Altura</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Altura")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextField, mergeProps({
                          placeholder: "p.ej. 180",
                          outlined: "",
                          type: "number",
                          modelValue: unref(fields).height.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).height.fieldValue = $event
                        }, unref(fields).height.fieldPropsValue, {
                          density: "compact",
                          min: "0"
                        }), {
                          "append-inner": withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`cm`);
                            } else {
                              return [
                                createTextVNode("cm")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextField, mergeProps({
                            placeholder: "p.ej. 180",
                            outlined: "",
                            type: "number",
                            modelValue: unref(fields).height.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).height.fieldValue = $event
                          }, unref(fields).height.fieldPropsValue, {
                            density: "compact",
                            min: "0"
                          }), {
                            "append-inner": withCtx(() => [
                              createTextVNode("cm")
                            ]),
                            _: 1
                          }, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Altura")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextField, mergeProps({
                          placeholder: "p.ej. 180",
                          outlined: "",
                          type: "number",
                          modelValue: unref(fields).height.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).height.fieldValue = $event
                        }, unref(fields).height.fieldPropsValue, {
                          density: "compact",
                          min: "0"
                        }), {
                          "append-inner": withCtx(() => [
                            createTextVNode("cm")
                          ]),
                          _: 1
                        }, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Peso </span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Peso ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextField, mergeProps({
                          modelValue: unref(fields).weight.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).weight.fieldValue = $event
                        }, unref(fields).weight.fieldPropsValue, {
                          type: "number",
                          min: "0",
                          placeholder: "p.ej. 80"
                        }), {
                          "append-inner": withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`kg`);
                            } else {
                              return [
                                createTextVNode("kg")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextField, mergeProps({
                            modelValue: unref(fields).weight.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).weight.fieldValue = $event
                          }, unref(fields).weight.fieldPropsValue, {
                            type: "number",
                            min: "0",
                            placeholder: "p.ej. 80"
                          }), {
                            "append-inner": withCtx(() => [
                              createTextVNode("kg")
                            ]),
                            _: 1
                          }, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Peso ")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextField, mergeProps({
                          modelValue: unref(fields).weight.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).weight.fieldValue = $event
                        }, unref(fields).weight.fieldPropsValue, {
                          type: "number",
                          min: "0",
                          placeholder: "p.ej. 80"
                        }), {
                          "append-inner": withCtx(() => [
                            createTextVNode("kg")
                          ]),
                          _: 1
                        }, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Pierna dominante</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Pierna dominante")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VItemGroup, {
                          "selected-class": "primary",
                          class: "d-flex",
                          "model-value": unref(fields).dominant_foot.fieldValue,
                          "onUpdate:modelValue": dominatedFootHandler
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(VRow, { "no-gutters": "" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<!--[-->`);
                                    ssrRenderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                      _push6(ssrRenderComponent(VCol, {
                                        cols: "6",
                                        class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                      }, {
                                        default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                          if (_push7) {
                                            _push7(ssrRenderComponent(VItem, {
                                              value: item.text
                                            }, {
                                              default: withCtx(({ isSelected, selectedClass, toggle }, _push8, _parent8, _scopeId7) => {
                                                if (_push8) {
                                                  _push8(ssrRenderComponent(VBtn, {
                                                    variant: "outlined",
                                                    density: "compact",
                                                    size: "x-large",
                                                    onClick: toggle,
                                                    color: isSelected ? "primary" : "secondary",
                                                    block: ""
                                                  }, {
                                                    default: withCtx((_7, _push9, _parent9, _scopeId8) => {
                                                      if (_push9) {
                                                        _push9(`${ssrInterpolate(item.text)}`);
                                                      } else {
                                                        return [
                                                          createTextVNode(toDisplayString(item.text), 1)
                                                        ];
                                                      }
                                                    }),
                                                    _: 2
                                                  }, _parent8, _scopeId7));
                                                } else {
                                                  return [
                                                    createVNode(VBtn, {
                                                      variant: "outlined",
                                                      density: "compact",
                                                      size: "x-large",
                                                      onClick: toggle,
                                                      color: isSelected ? "primary" : "secondary",
                                                      block: ""
                                                    }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString(item.text), 1)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["onClick", "color"])
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent7, _scopeId6));
                                          } else {
                                            return [
                                              createVNode(VItem, {
                                                value: item.text
                                              }, {
                                                default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                                  createVNode(VBtn, {
                                                    variant: "outlined",
                                                    density: "compact",
                                                    size: "x-large",
                                                    onClick: toggle,
                                                    color: isSelected ? "primary" : "secondary",
                                                    block: ""
                                                  }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString(item.text), 1)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["onClick", "color"])
                                                ]),
                                                _: 2
                                              }, 1032, ["value"])
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent6, _scopeId5));
                                    });
                                    _push6(`<!--]-->`);
                                  } else {
                                    return [
                                      (openBlock(), createBlock(Fragment, null, renderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                        return createVNode(VCol, {
                                          cols: "6",
                                          class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                        }, {
                                          default: withCtx(() => [
                                            createVNode(VItem, {
                                              value: item.text
                                            }, {
                                              default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                                createVNode(VBtn, {
                                                  variant: "outlined",
                                                  density: "compact",
                                                  size: "x-large",
                                                  onClick: toggle,
                                                  color: isSelected ? "primary" : "secondary",
                                                  block: ""
                                                }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString(item.text), 1)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["onClick", "color"])
                                              ]),
                                              _: 2
                                            }, 1032, ["value"])
                                          ]),
                                          _: 2
                                        }, 1032, ["class"]);
                                      }), 64))
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(VRow, { "no-gutters": "" }, {
                                  default: withCtx(() => [
                                    (openBlock(), createBlock(Fragment, null, renderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                      return createVNode(VCol, {
                                        cols: "6",
                                        class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                      }, {
                                        default: withCtx(() => [
                                          createVNode(VItem, {
                                            value: item.text
                                          }, {
                                            default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                              createVNode(VBtn, {
                                                variant: "outlined",
                                                density: "compact",
                                                size: "x-large",
                                                onClick: toggle,
                                                color: isSelected ? "primary" : "secondary",
                                                block: ""
                                              }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString(item.text), 1)
                                                ]),
                                                _: 2
                                              }, 1032, ["onClick", "color"])
                                            ]),
                                            _: 2
                                          }, 1032, ["value"])
                                        ]),
                                        _: 2
                                      }, 1032, ["class"]);
                                    }), 64))
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VItemGroup, {
                            "selected-class": "primary",
                            class: "d-flex",
                            "model-value": unref(fields).dominant_foot.fieldValue,
                            "onUpdate:modelValue": dominatedFootHandler
                          }, {
                            default: withCtx(() => [
                              createVNode(VRow, { "no-gutters": "" }, {
                                default: withCtx(() => [
                                  (openBlock(), createBlock(Fragment, null, renderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                    return createVNode(VCol, {
                                      cols: "6",
                                      class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                    }, {
                                      default: withCtx(() => [
                                        createVNode(VItem, {
                                          value: item.text
                                        }, {
                                          default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                            createVNode(VBtn, {
                                              variant: "outlined",
                                              density: "compact",
                                              size: "x-large",
                                              onClick: toggle,
                                              color: isSelected ? "primary" : "secondary",
                                              block: ""
                                            }, {
                                              default: withCtx(() => [
                                                createTextVNode(toDisplayString(item.text), 1)
                                              ]),
                                              _: 2
                                            }, 1032, ["onClick", "color"])
                                          ]),
                                          _: 2
                                        }, 1032, ["value"])
                                      ]),
                                      _: 2
                                    }, 1032, ["class"]);
                                  }), 64))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }, 8, ["model-value"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Pierna dominante")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VItemGroup, {
                          "selected-class": "primary",
                          class: "d-flex",
                          "model-value": unref(fields).dominant_foot.fieldValue,
                          "onUpdate:modelValue": dominatedFootHandler
                        }, {
                          default: withCtx(() => [
                            createVNode(VRow, { "no-gutters": "" }, {
                              default: withCtx(() => [
                                (openBlock(), createBlock(Fragment, null, renderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                  return createVNode(VCol, {
                                    cols: "6",
                                    class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                  }, {
                                    default: withCtx(() => [
                                      createVNode(VItem, {
                                        value: item.text
                                      }, {
                                        default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                          createVNode(VBtn, {
                                            variant: "outlined",
                                            density: "compact",
                                            size: "x-large",
                                            onClick: toggle,
                                            color: isSelected ? "primary" : "secondary",
                                            block: ""
                                          }, {
                                            default: withCtx(() => [
                                              createTextVNode(toDisplayString(item.text), 1)
                                            ]),
                                            _: 2
                                          }, 1032, ["onClick", "color"])
                                        ]),
                                        _: 2
                                      }, 1032, ["value"])
                                    ]),
                                    _: 2
                                  }, 1032, ["class"]);
                                }), 64))
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }, 8, ["model-value"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}>Notas medicas</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, "Notas medicas")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextarea, mergeProps({
                          modelValue: unref(fields).medical_notes.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).medical_notes.fieldValue = $event
                        }, unref(fields).medical_notes.fieldPropsValue, { placeholder: "A\xF1ade notas m\xE9dicas si es necesario\u2026" }), null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextarea, mergeProps({
                            modelValue: unref(fields).medical_notes.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).medical_notes.fieldValue = $event
                          }, unref(fields).medical_notes.fieldPropsValue, { placeholder: "A\xF1ade notas m\xE9dicas si es necesario\u2026" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, "Notas medicas")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextarea, mergeProps({
                          modelValue: unref(fields).medical_notes.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).medical_notes.fieldValue = $event
                        }, unref(fields).medical_notes.fieldPropsValue, { placeholder: "A\xF1ade notas m\xE9dicas si es necesario\u2026" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Posici\xF3n")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VSelect, mergeProps({
                        items: unref(positions),
                        placeholder: "p.ej. Ronaldo",
                        outlined: "",
                        "item-value": "id",
                        "item-props": (item) => ({ title: item.abbr, subtitle: item.name }),
                        modelValue: unref(fields).position_id.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).position_id.fieldValue = $event
                      }, unref(fields).position_id.fieldPropsValue, { density: "compact" }), null, 16, ["items", "item-props", "modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Jersey/Camiseta")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8",
                    classs: "position-relative"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextField, mergeProps({
                        modelValue: unref(fields).number.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).number.fieldValue = $event
                      }, unref(fields).number.fieldPropsValue, {
                        type: "number",
                        placeholder: "p.ej. 12+1",
                        min: "1"
                      }), null, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Altura")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextField, mergeProps({
                        placeholder: "p.ej. 180",
                        outlined: "",
                        type: "number",
                        modelValue: unref(fields).height.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).height.fieldValue = $event
                      }, unref(fields).height.fieldPropsValue, {
                        density: "compact",
                        min: "0"
                      }), {
                        "append-inner": withCtx(() => [
                          createTextVNode("cm")
                        ]),
                        _: 1
                      }, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Peso ")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextField, mergeProps({
                        modelValue: unref(fields).weight.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).weight.fieldValue = $event
                      }, unref(fields).weight.fieldPropsValue, {
                        type: "number",
                        min: "0",
                        placeholder: "p.ej. 80"
                      }), {
                        "append-inner": withCtx(() => [
                          createTextVNode("kg")
                        ]),
                        _: 1
                      }, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Pierna dominante")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VItemGroup, {
                        "selected-class": "primary",
                        class: "d-flex",
                        "model-value": unref(fields).dominant_foot.fieldValue,
                        "onUpdate:modelValue": dominatedFootHandler
                      }, {
                        default: withCtx(() => [
                          createVNode(VRow, { "no-gutters": "" }, {
                            default: withCtx(() => [
                              (openBlock(), createBlock(Fragment, null, renderList([{ text: "Izquierda" }, { text: "Derecha" }], (item) => {
                                return createVNode(VCol, {
                                  cols: "6",
                                  class: item.text === "Izquierda" ? "pr-2" : "pl-2"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(VItem, {
                                      value: item.text
                                    }, {
                                      default: withCtx(({ isSelected, selectedClass, toggle }) => [
                                        createVNode(VBtn, {
                                          variant: "outlined",
                                          density: "compact",
                                          size: "x-large",
                                          onClick: toggle,
                                          color: isSelected ? "primary" : "secondary",
                                          block: ""
                                        }, {
                                          default: withCtx(() => [
                                            createTextVNode(toDisplayString(item.text), 1)
                                          ]),
                                          _: 2
                                        }, 1032, ["onClick", "color"])
                                      ]),
                                      _: 2
                                    }, 1032, ["value"])
                                  ]),
                                  _: 2
                                }, 1032, ["class"]);
                              }), 64))
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }, 8, ["model-value"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, "Notas medicas")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextarea, mergeProps({
                        modelValue: unref(fields).medical_notes.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).medical_notes.fieldValue = $event
                      }, unref(fields).medical_notes.fieldPropsValue, { placeholder: "A\xF1ade notas m\xE9dicas si es necesario\u2026" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/stepper/02-details-info.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const _sfc_main$9 = /* @__PURE__ */ defineComponent({
  __name: "03-contact-info",
  __ssrInlineRender: true,
  setup(__props, { expose: __expose }) {
    const { isEdition, playerStoreRequest } = storeToRefs(usePlayerStore());
    const { handleSubmit, fields, validate } = useSchemas(
      isEdition.value ? "edit-player-contact-info" : "create-player-contact-info"
    );
    __expose({
      validate,
      handleSubmit
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_client_only = __nuxt_component_0$1$1;
      _push(ssrRenderComponent(VContainer, mergeProps({ class: "pt-0" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Correo electr\xF3nico*</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Correo electr\xF3nico*")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextField, mergeProps({
                          modelValue: unref(fields).email.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).email.fieldValue = $event
                        }, unref(fields).email.fieldPropsValue, { placeholder: "p.ej. sagit@futzo.io" }), null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextField, mergeProps({
                            modelValue: unref(fields).email.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).email.fieldValue = $event
                          }, unref(fields).email.fieldPropsValue, { placeholder: "p.ej. sagit@futzo.io" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Correo electr\xF3nico*")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextField, mergeProps({
                          modelValue: unref(fields).email.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).email.fieldValue = $event
                        }, unref(fields).email.fieldPropsValue, { placeholder: "p.ej. sagit@futzo.io" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}>Tel\xE9fono</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, "Tel\xE9fono")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_component_client_only, null, {}, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(_component_client_only, null, {
                            default: withCtx(() => [
                              createVNode(unref(Al), {
                                variant: "plain",
                                singleLine: true,
                                modelValue: unref(fields).phone.fieldValue,
                                "onUpdate:modelValue": ($event) => unref(fields).phone.fieldValue = $event,
                                class: "phone-input",
                                disabled: unref(isEdition),
                                "display-format": "international",
                                example: "52 1 55 1234 5678",
                                "validate-on": "blur lazy",
                                invalidMessage: ({ label, example }) => {
                                  return `${label} debe ser un numero valido (${example}).`;
                                }
                              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "invalidMessage"]),
                              createVNode("small", { class: "text-error" }, toDisplayString(unref(fields).phone.fieldPropsValue["error-messages"][0]), 1)
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, "Tel\xE9fono")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_client_only, null, {
                          default: withCtx(() => [
                            createVNode(unref(Al), {
                              variant: "plain",
                              singleLine: true,
                              modelValue: unref(fields).phone.fieldValue,
                              "onUpdate:modelValue": ($event) => unref(fields).phone.fieldValue = $event,
                              class: "phone-input",
                              disabled: unref(isEdition),
                              "display-format": "international",
                              example: "52 1 55 1234 5678",
                              "validate-on": "blur lazy",
                              invalidMessage: ({ label, example }) => {
                                return `${label} debe ser un numero valido (${example}).`;
                              }
                            }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "invalidMessage"]),
                            createVNode("small", { class: "text-error" }, toDisplayString(unref(fields).phone.fieldPropsValue["error-messages"][0]), 1)
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VRow, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<span class="text-body-1"${_scopeId3}> Notas adicionales</span>`);
                      } else {
                        return [
                          createVNode("span", { class: "text-body-1" }, " Notas adicionales")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VTextarea, mergeProps({
                          placeholder: "A\xF1ade notas adicionales si es necesario...",
                          modelValue: unref(fields).notes.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).notes.fieldValue = $event
                        }, unref(fields).notes.fieldPropsValue), null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VTextarea, mergeProps({
                            placeholder: "A\xF1ade notas adicionales si es necesario...",
                            modelValue: unref(fields).notes.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).notes.fieldValue = $event
                          }, unref(fields).notes.fieldPropsValue), null, 16, ["modelValue", "onUpdate:modelValue"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VCol, {
                      cols: "12",
                      lg: "4",
                      md: "4"
                    }, {
                      default: withCtx(() => [
                        createVNode("span", { class: "text-body-1" }, " Notas adicionales")
                      ]),
                      _: 1
                    }),
                    createVNode(VCol, {
                      cols: "12",
                      lg: "8",
                      md: "8"
                    }, {
                      default: withCtx(() => [
                        createVNode(VTextarea, mergeProps({
                          placeholder: "A\xF1ade notas adicionales si es necesario...",
                          modelValue: unref(fields).notes.fieldValue,
                          "onUpdate:modelValue": ($event) => unref(fields).notes.fieldValue = $event
                        }, unref(fields).notes.fieldPropsValue), null, 16, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Correo electr\xF3nico*")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextField, mergeProps({
                        modelValue: unref(fields).email.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).email.fieldValue = $event
                      }, unref(fields).email.fieldPropsValue, { placeholder: "p.ej. sagit@futzo.io" }), null, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, "Tel\xE9fono")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_client_only, null, {
                        default: withCtx(() => [
                          createVNode(unref(Al), {
                            variant: "plain",
                            singleLine: true,
                            modelValue: unref(fields).phone.fieldValue,
                            "onUpdate:modelValue": ($event) => unref(fields).phone.fieldValue = $event,
                            class: "phone-input",
                            disabled: unref(isEdition),
                            "display-format": "international",
                            example: "52 1 55 1234 5678",
                            "validate-on": "blur lazy",
                            invalidMessage: ({ label, example }) => {
                              return `${label} debe ser un numero valido (${example}).`;
                            }
                          }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "invalidMessage"]),
                          createVNode("small", { class: "text-error" }, toDisplayString(unref(fields).phone.fieldPropsValue["error-messages"][0]), 1)
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(VRow, null, {
                default: withCtx(() => [
                  createVNode(VCol, {
                    cols: "12",
                    lg: "4",
                    md: "4"
                  }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-body-1" }, " Notas adicionales")
                    ]),
                    _: 1
                  }),
                  createVNode(VCol, {
                    cols: "12",
                    lg: "8",
                    md: "8"
                  }, {
                    default: withCtx(() => [
                      createVNode(VTextarea, mergeProps({
                        placeholder: "A\xF1ade notas adicionales si es necesario...",
                        modelValue: unref(fields).notes.fieldValue,
                        "onUpdate:modelValue": ($event) => unref(fields).notes.fieldValue = $event
                      }, unref(fields).notes.fieldPropsValue), null, 16, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/stepper/03-contact-info.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const _sfc_main$8 = /* @__PURE__ */ defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    const loading = ref(false);
    const { steps, isEdition, playerStoreRequest, dialog } = storeToRefs(usePlayerStore());
    const stepRef = ref({
      validate: Function,
      handleSubmit: Function
    });
    const backHandler = () => {
      if (steps.value.current === "basic-info") {
        dialog.value = false;
        return;
      }
      const stepsOrder = [
        "basic-info",
        "details-info",
        "contact-info"
      ];
      const currentStepIndex = stepsOrder.indexOf(steps.value.current);
      steps.value.current = stepsOrder[currentStepIndex - 1];
    };
    const nextHandler = async () => {
      const statusForm = await stepRef.value.validate();
      const formValues = stepRef.value.handleSubmit(
        (values) => values
      );
      const playerStoreRequestValues = await formValues();
      if (statusForm.valid) {
        if (steps.value.current === "basic-info") {
          playerStoreRequest.value = {
            ...playerStoreRequest.value,
            basic: { ...playerStoreRequestValues }
          };
        }
        if (steps.value.current === "details-info") {
          playerStoreRequest.value = {
            ...playerStoreRequest.value,
            details: { ...playerStoreRequestValues }
          };
        }
        if (steps.value.current === "contact-info") {
          playerStoreRequest.value = {
            ...playerStoreRequest.value,
            contact: { ...playerStoreRequestValues }
          };
        }
        const stepsOrder = [
          "basic-info",
          "details-info",
          "contact-info"
        ];
        const currentStepIndex = stepsOrder.indexOf(steps.value.current);
        if (!steps.value.steps[currentStepIndex].completed) {
          steps.value.steps[currentStepIndex].completed = true;
        }
        if (currentStepIndex === stepsOrder.length - 1) {
          loading.value = true;
          if (isEdition.value) {
            await usePlayerStore().updatePlayer(
              playerStoreRequest.value.basic.id
            );
          } else {
            await usePlayerStore().createPlayer();
          }
          loading.value = false;
          return;
        }
        steps.value.current = stepsOrder[currentStepIndex + 1];
      }
    };
    const textButtonCancel = computed(() => {
      if (steps.value.current === "basic-info") {
        return "Cancelar";
      } else {
        return "Regresar";
      }
    });
    const textButton = computed(() => {
      switch (steps.value.current) {
        case "basic-info":
          return "Siguiente";
        case "details-info":
          return "Siguiente";
        case "contact-info":
          return isEdition.value ? "Actualizar jugador" : "Crear jugador";
        default:
          return "Crear jugador";
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PerfectScrollbar = resolveComponent("PerfectScrollbar");
      const _component_transition_slide = __nuxt_component_0$1;
      _push(ssrRenderComponent(_component_PerfectScrollbar, mergeProps({ options: {
        suppressScrollX: true
      } }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VCardText, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VContainer, { class: "pa-0" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VRow, null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(VCol, null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(IndicatorStep, { "form-steps": unref(steps) }, null, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(IndicatorStep, { "form-steps": unref(steps) }, null, 8, ["form-steps"])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(VCol, null, {
                                  default: withCtx(() => [
                                    createVNode(IndicatorStep, { "form-steps": unref(steps) }, null, 8, ["form-steps"])
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(VRow, null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(VCol, null, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(_component_transition_slide, {
                                      group: "",
                                      offset: {
                                        enter: ["-100%", 0],
                                        leave: ["100%", 0]
                                      }
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          if (unref(steps).current === "basic-info") {
                                            _push7(ssrRenderComponent(_sfc_main$b, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            }, null, _parent7, _scopeId6));
                                          } else {
                                            _push7(`<!---->`);
                                          }
                                          if (unref(steps).current === "details-info") {
                                            _push7(ssrRenderComponent(_sfc_main$a, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            }, null, _parent7, _scopeId6));
                                          } else {
                                            _push7(`<!---->`);
                                          }
                                          if (unref(steps).current === "contact-info") {
                                            _push7(ssrRenderComponent(_sfc_main$9, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            }, null, _parent7, _scopeId6));
                                          } else {
                                            _push7(`<!---->`);
                                          }
                                        } else {
                                          return [
                                            unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            })) : createCommentVNode("", true),
                                            unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            })) : createCommentVNode("", true),
                                            unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                              ref_key: "stepRef",
                                              ref: stepRef,
                                              key: unref(steps).current
                                            })) : createCommentVNode("", true)
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(_component_transition_slide, {
                                        group: "",
                                        offset: {
                                          enter: ["-100%", 0],
                                          leave: ["100%", 0]
                                        }
                                      }, {
                                        default: withCtx(() => [
                                          unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                            ref_key: "stepRef",
                                            ref: stepRef,
                                            key: unref(steps).current
                                          })) : createCommentVNode("", true),
                                          unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                            ref_key: "stepRef",
                                            ref: stepRef,
                                            key: unref(steps).current
                                          })) : createCommentVNode("", true),
                                          unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                            ref_key: "stepRef",
                                            ref: stepRef,
                                            key: unref(steps).current
                                          })) : createCommentVNode("", true)
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(VCol, null, {
                                  default: withCtx(() => [
                                    createVNode(_component_transition_slide, {
                                      group: "",
                                      offset: {
                                        enter: ["-100%", 0],
                                        leave: ["100%", 0]
                                      }
                                    }, {
                                      default: withCtx(() => [
                                        unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                          ref_key: "stepRef",
                                          ref: stepRef,
                                          key: unref(steps).current
                                        })) : createCommentVNode("", true),
                                        unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                          ref_key: "stepRef",
                                          ref: stepRef,
                                          key: unref(steps).current
                                        })) : createCommentVNode("", true),
                                        unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                          ref_key: "stepRef",
                                          ref: stepRef,
                                          key: unref(steps).current
                                        })) : createCommentVNode("", true)
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(VRow, null, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(VCol, { cols: "6" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(VBtn, {
                                      variant: "outlined",
                                      block: "",
                                      color: "secondary",
                                      density: "comfortable",
                                      size: "large",
                                      onClick: backHandler
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`${ssrInterpolate(unref(textButtonCancel))}`);
                                        } else {
                                          return [
                                            createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(VBtn, {
                                        variant: "outlined",
                                        block: "",
                                        color: "secondary",
                                        density: "comfortable",
                                        size: "large",
                                        onClick: backHandler
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                        ]),
                                        _: 1
                                      })
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(ssrRenderComponent(VCol, { cols: "6" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(VBtn, {
                                      variant: "elevated",
                                      block: "",
                                      color: "primary",
                                      density: "comfortable",
                                      size: "large",
                                      loading: unref(loading),
                                      onClick: nextHandler
                                    }, {
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(`${ssrInterpolate(unref(textButton))}`);
                                        } else {
                                          return [
                                            createTextVNode(toDisplayString(unref(textButton)), 1)
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(VBtn, {
                                        variant: "elevated",
                                        block: "",
                                        color: "primary",
                                        density: "comfortable",
                                        size: "large",
                                        loading: unref(loading),
                                        onClick: nextHandler
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(toDisplayString(unref(textButton)), 1)
                                        ]),
                                        _: 1
                                      }, 8, ["loading"])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(VCol, { cols: "6" }, {
                                  default: withCtx(() => [
                                    createVNode(VBtn, {
                                      variant: "outlined",
                                      block: "",
                                      color: "secondary",
                                      density: "comfortable",
                                      size: "large",
                                      onClick: backHandler
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                      ]),
                                      _: 1
                                    })
                                  ]),
                                  _: 1
                                }),
                                createVNode(VCol, { cols: "6" }, {
                                  default: withCtx(() => [
                                    createVNode(VBtn, {
                                      variant: "elevated",
                                      block: "",
                                      color: "primary",
                                      density: "comfortable",
                                      size: "large",
                                      loading: unref(loading),
                                      onClick: nextHandler
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(toDisplayString(unref(textButton)), 1)
                                      ]),
                                      _: 1
                                    }, 8, ["loading"])
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VRow, null, {
                            default: withCtx(() => [
                              createVNode(VCol, null, {
                                default: withCtx(() => [
                                  createVNode(IndicatorStep, { "form-steps": unref(steps) }, null, 8, ["form-steps"])
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(VRow, null, {
                            default: withCtx(() => [
                              createVNode(VCol, null, {
                                default: withCtx(() => [
                                  createVNode(_component_transition_slide, {
                                    group: "",
                                    offset: {
                                      enter: ["-100%", 0],
                                      leave: ["100%", 0]
                                    }
                                  }, {
                                    default: withCtx(() => [
                                      unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                        ref_key: "stepRef",
                                        ref: stepRef,
                                        key: unref(steps).current
                                      })) : createCommentVNode("", true),
                                      unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                        ref_key: "stepRef",
                                        ref: stepRef,
                                        key: unref(steps).current
                                      })) : createCommentVNode("", true),
                                      unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                        ref_key: "stepRef",
                                        ref: stepRef,
                                        key: unref(steps).current
                                      })) : createCommentVNode("", true)
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(VRow, null, {
                            default: withCtx(() => [
                              createVNode(VCol, { cols: "6" }, {
                                default: withCtx(() => [
                                  createVNode(VBtn, {
                                    variant: "outlined",
                                    block: "",
                                    color: "secondary",
                                    density: "comfortable",
                                    size: "large",
                                    onClick: backHandler
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                    ]),
                                    _: 1
                                  })
                                ]),
                                _: 1
                              }),
                              createVNode(VCol, { cols: "6" }, {
                                default: withCtx(() => [
                                  createVNode(VBtn, {
                                    variant: "elevated",
                                    block: "",
                                    color: "primary",
                                    density: "comfortable",
                                    size: "large",
                                    loading: unref(loading),
                                    onClick: nextHandler
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(unref(textButton)), 1)
                                    ]),
                                    _: 1
                                  }, 8, ["loading"])
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VContainer, { class: "pa-0" }, {
                      default: withCtx(() => [
                        createVNode(VRow, null, {
                          default: withCtx(() => [
                            createVNode(VCol, null, {
                              default: withCtx(() => [
                                createVNode(IndicatorStep, { "form-steps": unref(steps) }, null, 8, ["form-steps"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(VRow, null, {
                          default: withCtx(() => [
                            createVNode(VCol, null, {
                              default: withCtx(() => [
                                createVNode(_component_transition_slide, {
                                  group: "",
                                  offset: {
                                    enter: ["-100%", 0],
                                    leave: ["100%", 0]
                                  }
                                }, {
                                  default: withCtx(() => [
                                    unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                      ref_key: "stepRef",
                                      ref: stepRef,
                                      key: unref(steps).current
                                    })) : createCommentVNode("", true),
                                    unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                      ref_key: "stepRef",
                                      ref: stepRef,
                                      key: unref(steps).current
                                    })) : createCommentVNode("", true),
                                    unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                      ref_key: "stepRef",
                                      ref: stepRef,
                                      key: unref(steps).current
                                    })) : createCommentVNode("", true)
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        }),
                        createVNode(VRow, null, {
                          default: withCtx(() => [
                            createVNode(VCol, { cols: "6" }, {
                              default: withCtx(() => [
                                createVNode(VBtn, {
                                  variant: "outlined",
                                  block: "",
                                  color: "secondary",
                                  density: "comfortable",
                                  size: "large",
                                  onClick: backHandler
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(VCol, { cols: "6" }, {
                              default: withCtx(() => [
                                createVNode(VBtn, {
                                  variant: "elevated",
                                  block: "",
                                  color: "primary",
                                  density: "comfortable",
                                  size: "large",
                                  loading: unref(loading),
                                  onClick: nextHandler
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(unref(textButton)), 1)
                                  ]),
                                  _: 1
                                }, 8, ["loading"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VCardText, null, {
                default: withCtx(() => [
                  createVNode(VContainer, { class: "pa-0" }, {
                    default: withCtx(() => [
                      createVNode(VRow, null, {
                        default: withCtx(() => [
                          createVNode(VCol, null, {
                            default: withCtx(() => [
                              createVNode(IndicatorStep, { "form-steps": unref(steps) }, null, 8, ["form-steps"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(VRow, null, {
                        default: withCtx(() => [
                          createVNode(VCol, null, {
                            default: withCtx(() => [
                              createVNode(_component_transition_slide, {
                                group: "",
                                offset: {
                                  enter: ["-100%", 0],
                                  leave: ["100%", 0]
                                }
                              }, {
                                default: withCtx(() => [
                                  unref(steps).current === "basic-info" ? (openBlock(), createBlock(_sfc_main$b, {
                                    ref_key: "stepRef",
                                    ref: stepRef,
                                    key: unref(steps).current
                                  })) : createCommentVNode("", true),
                                  unref(steps).current === "details-info" ? (openBlock(), createBlock(_sfc_main$a, {
                                    ref_key: "stepRef",
                                    ref: stepRef,
                                    key: unref(steps).current
                                  })) : createCommentVNode("", true),
                                  unref(steps).current === "contact-info" ? (openBlock(), createBlock(_sfc_main$9, {
                                    ref_key: "stepRef",
                                    ref: stepRef,
                                    key: unref(steps).current
                                  })) : createCommentVNode("", true)
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(VRow, null, {
                        default: withCtx(() => [
                          createVNode(VCol, { cols: "6" }, {
                            default: withCtx(() => [
                              createVNode(VBtn, {
                                variant: "outlined",
                                block: "",
                                color: "secondary",
                                density: "comfortable",
                                size: "large",
                                onClick: backHandler
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(textButtonCancel)), 1)
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          createVNode(VCol, { cols: "6" }, {
                            default: withCtx(() => [
                              createVNode(VBtn, {
                                variant: "elevated",
                                block: "",
                                color: "primary",
                                density: "comfortable",
                                size: "large",
                                loading: unref(loading),
                                onClick: nextHandler
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(unref(textButton)), 1)
                                ]),
                                _: 1
                              }, 8, ["loading"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/stepper/index.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const _sfc_main$7 = /* @__PURE__ */ defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    const { steps, dialog, playerStoreRequest } = storeToRefs(usePlayerStore());
    const leaveHandler = () => {
      steps.value.current = "basic-info";
      steps.value.completed = [];
      playerStoreRequest.value = {};
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(VDialog, mergeProps({
        modelValue: unref(dialog),
        "onUpdate:modelValue": ($event) => isRef(dialog) ? dialog.value = $event : null,
        "max-width": "690",
        onAfterLeave: leaveHandler,
        scrollable: ""
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VCard, {
              class: "create-tournament-card futzo-rounded",
              height: "100%",
              style: { overflow: _ctx.$vuetify.display.mobile ? "" : "hidden" }
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$c, null, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$8, {
                    step: unref(steps).current
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$c),
                    createVNode(_sfc_main$8, {
                      step: unref(steps).current
                    }, null, 8, ["step"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VCard, {
                class: "create-tournament-card futzo-rounded",
                height: "100%",
                style: { overflow: _ctx.$vuetify.display.mobile ? "" : "hidden" }
              }, {
                default: withCtx(() => [
                  createVNode(_sfc_main$c),
                  createVNode(_sfc_main$8, {
                    step: unref(steps).current
                  }, null, 8, ["step"])
                ]),
                _: 1
              }, 8, ["style"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/dialog/index.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const _sfc_main$6 = /* @__PURE__ */ defineComponent({
  __name: "players-table",
  __ssrInlineRender: true,
  setup(__props) {
    const {
      players,
      playerId,
      isEdition,
      pagination,
      dialog,
      playerStoreRequest,
      search,
      showAssignTeam
    } = storeToRefs(usePlayerStore());
    const headers = getHeaders("players");
    const showPlayerHandler = (player) => {
      console.log({ player });
    };
    const assignTeam = (item) => {
      console.log(item.id);
      playerId.value = item.id;
      showAssignTeam.value = !showAssignTeam.value;
    };
    const { teams } = storeToRefs(useTeamStore());
    const areThereTeams = computed(() => teams.value.length > 0);
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_Table = _sfc_main$k;
      if ((_a = unref(players)) == null ? void 0 : _a.length) {
        _push(ssrRenderComponent(_component_Table, mergeProps({
          headers: unref(headers),
          "show-index": false,
          items: unref(players),
          itemKey: "name",
          search: unref(search),
          pagination: unref(pagination),
          "onUpdate:pagination": ($event) => isRef(pagination) ? pagination.value = $event : null,
          paginate: unref(usePlayerStore)().getPlayers,
          "custom-name": false,
          "assign-team": assignTeam,
          "enable-assign-team": unref(areThereTeams)
        }, _attrs), {
          actions: withCtx(({ item }, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(VBtn, {
                size: "small",
                rounded: "md",
                disabled: "",
                onClick: ($event) => showPlayerHandler(item)
              }, {
                default: withCtx((_, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`Ver Jugador `);
                  } else {
                    return [
                      createTextVNode("Ver Jugador ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(VBtn, {
                  size: "small",
                  rounded: "md",
                  disabled: "",
                  onClick: ($event) => showPlayerHandler(item)
                }, {
                  default: withCtx(() => [
                    createTextVNode("Ver Jugador ")
                  ]),
                  _: 2
                }, 1032, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/players-table.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const _sfc_main$5 = /* @__PURE__ */ defineComponent({
  __name: "header",
  __ssrInlineRender: true,
  emits: ["close"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Icon = __nuxt_component_0;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(VCardItem, null, {
        prepend: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VSheet, {
              border: "primary thin",
              class: "mx-auto d-flex justify-center align-center mr-2 rounded-lg",
              height: "45",
              width: "45"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Icon, { name: "futzo-icon:file" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Icon, { name: "futzo-icon:file" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VSheet, {
                border: "primary thin",
                class: "mx-auto d-flex justify-center align-center mr-2 rounded-lg",
                height: "45",
                width: "45"
              }, {
                default: withCtx(() => [
                  createVNode(_component_Icon, { name: "futzo-icon:file" })
                ]),
                _: 1
              })
            ];
          }
        }),
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class=""${_scopeId}>Importar XLS</span>`);
          } else {
            return [
              createVNode("span", { class: "" }, "Importar XLS")
            ];
          }
        }),
        subtitle: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Importa tu documento .xls/x o descarga la plantilla y arr\xE1stralo aqu\xED para `);
          } else {
            return [
              createTextVNode("Importa tu documento .xls/x o descarga la plantilla y arr\xE1stralo aqu\xED para ")
            ];
          }
        }),
        append: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Icon, {
              name: "futzo-icon:x-dialog",
              onClick: () => emits("close")
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Icon, {
                name: "futzo-icon:x-dialog",
                onClick: () => emits("close")
              }, null, 8, ["onClick"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(VDivider, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/import-dialog/header.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const _sfc_main$4 = /* @__PURE__ */ defineComponent({
  __name: "form",
  __ssrInlineRender: true,
  props: {
    "file": {},
    "fileModifiers": {}
  },
  emits: ["update:file"],
  setup(__props) {
    const dropZoneRef = ref();
    const refInputFile = ref();
    const file = useModel(__props, "file");
    useDropZone(dropZoneRef, {});
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Icon = __nuxt_component_0;
      _push(ssrRenderComponent(VCardText, mergeProps({
        ref_key: "dropZoneRef",
        ref: dropZoneRef,
        onDragover: () => {
        },
        onDrop: () => {
        },
        class: "pb-2"
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="import-form-container" data-v-7cc643d8${_scopeId}><div class="icon-container" data-v-7cc643d8${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Icon, {
              name: "futzo-icon:upload",
              size: "24"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="cta-container" data-v-7cc643d8${_scopeId}><button class="btn" data-v-7cc643d8${_scopeId}> Clic para subir archivo </button><span data-v-7cc643d8${_scopeId}> o arrastra y suelta</span><p class="conditions" data-v-7cc643d8${_scopeId}>XLS o XLSX (tama\xF1o m\xE1ximo 8MB)</p>`);
            _push2(ssrRenderComponent(VFileInput, {
              modelValue: file.value,
              "onUpdate:modelValue": ($event) => file.value = $event,
              ref_key: "refInputFile",
              ref: refInputFile,
              "hide-input": "",
              "hide-details": "",
              class: "d-none"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode("div", { class: "import-form-container" }, [
                createVNode("div", { class: "icon-container" }, [
                  createVNode(_component_Icon, {
                    name: "futzo-icon:upload",
                    size: "24"
                  })
                ]),
                createVNode("div", { class: "cta-container" }, [
                  createVNode("button", {
                    class: "btn",
                    onClick: () => {
                      var _a;
                      return (_a = refInputFile.value) == null ? void 0 : _a.click();
                    }
                  }, " Clic para subir archivo ", 8, ["onClick"]),
                  createVNode("span", null, " o arrastra y suelta"),
                  createVNode("p", { class: "conditions" }, "XLS o XLSX (tama\xF1o m\xE1ximo 8MB)"),
                  createVNode(VFileInput, {
                    modelValue: file.value,
                    "onUpdate:modelValue": ($event) => file.value = $event,
                    ref_key: "refInputFile",
                    ref: refInputFile,
                    "hide-input": "",
                    "hide-details": "",
                    class: "d-none"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/import-dialog/form.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const Form = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["__scopeId", "data-v-7cc643d8"]]);
const _sfc_main$3 = /* @__PURE__ */ defineComponent({
  __name: "drops",
  __ssrInlineRender: true,
  props: /* @__PURE__ */ mergeModels({
    disabled: {
      type: Boolean,
      default: true
    },
    loading: {
      type: Boolean,
      default: false
    }
  }, {
    "file": {},
    "fileModifiers": {}
  }),
  emits: /* @__PURE__ */ mergeModels(["import-players"], ["update:file"]),
  setup(__props, { emit: __emit }) {
    const file = useModel(__props, "file");
    const showDrops = ref(false);
    const progress = ref(0);
    const intervalId = ref();
    const timeOutId = ref();
    const [parent] = useAutoAnimate();
    const status = ref("");
    const isValidFile = ref();
    const active = ref(false);
    const subtitle = ref("");
    const border = ref({
      color: "#E4E7EC",
      size: "1px"
    });
    const formatsEnabled = [
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/vnd.ms-excel"
    ];
    const validateFile = (item) => {
      if (!item) return false;
      return formatsEnabled.includes(item.type);
    };
    watch(file, (value) => {
      initAnimation();
      isValidFile.value = validateFile(value);
    });
    watch(progress, (value) => {
      var _a;
      if (value === 100) {
        clearInterval(intervalId.value);
        status.value = "Listo";
        const size = Number((_a = file.value) == null ? void 0 : _a.size);
        if (isValidFile.value) {
          subtitle.value = `${(size / 1024).toFixed(2)} KB ${progress.value}% ${status.value}`;
        } else {
          border.value.color = "#F04438";
          border.value.size = "2px";
          subtitle.value = "Error en la carga, por favor intenta nuevamente. </br> <span class='font-weight-bold'>Formato no valido</span>";
        }
      }
    });
    const initAnimation = () => {
      var _a;
      if (status.value === "Listo") {
        status.value = "";
        progress.value = 0;
        clearInterval(intervalId.value);
        clearTimeout(timeOutId.value);
        showDrops.value = false;
        active.value = false;
        border.value.color = "#E4E7EC";
        border.value.size = "1px";
      }
      status.value = "Cargando...";
      const size = Number((_a = file.value) == null ? void 0 : _a.size);
      subtitle.value = `${(size / 1024).toFixed(2)} KB ${progress.value}% ${status.value}`;
      showDrops.value = true;
      intervalId.value = setInterval();
      timeOutId.value = setTimeout(() => {
        active.value = true;
      }, 100);
    };
    const emits = __emit;
    return (_ctx, _push, _parent, _attrs) => {
      var _a2;
      var _a;
      const _component_Icon = __nuxt_component_0;
      const _component_transition_fade = __nuxt_component_0$3;
      const _cssVars = { style: {
        "--401ddd2a": unref(border).color,
        "--1adedd5a": unref(border).size
      } };
      _push(`<div${ssrRenderAttrs(mergeProps({
        ref_key: "parent",
        ref: parent,
        class: "drops-container"
      }, _attrs, _cssVars))} data-v-1f4eefe1>`);
      if (unref(showDrops)) {
        _push(`<div class="${ssrRenderClass([unref(active) ? "active" : "", "drop-row"])}" data-v-1f4eefe1><div class="__details" data-v-1f4eefe1><div class="icon-container" data-v-1f4eefe1>`);
        _push(ssrRenderComponent(_component_Icon, {
          name: "futzo-icon:file-type",
          size: "40"
        }, null, _parent));
        _push(`</div><div class="content-container" data-v-1f4eefe1><p class="title" data-v-1f4eefe1>${ssrInterpolate((_a = file.value) == null ? void 0 : _a.name)}</p><p class="subtitle" data-v-1f4eefe1>${(_a2 = unref(subtitle)) != null ? _a2 : ""}</p></div><div class="progress-circular-container" data-v-1f4eefe1>`);
        _push(ssrRenderComponent(_component_transition_fade, {
          group: "",
          duration: 100
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              if (unref(status) === "Cargando...") {
                _push2(ssrRenderComponent(VProgressCircular, {
                  key: "progress-circular",
                  rotate: 360,
                  color: "primary",
                  size: 30,
                  width: "4",
                  "model-value": unref(progress)
                }, null, _parent2, _scopeId));
              } else if (unref(status) === "Listo" && unref(isValidFile)) {
                _push2(ssrRenderComponent(_component_Icon, {
                  key: "checkbox",
                  name: "futzo-icon:check-box"
                }, null, _parent2, _scopeId));
              } else if (unref(status) === "Listo" && !unref(isValidFile)) {
                _push2(ssrRenderComponent(_component_Icon, {
                  key: "trash",
                  name: "futzo-icon:trash-error",
                  size: "30",
                  class: "cursor-pointer",
                  onClick: () => showDrops.value = false
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
            } else {
              return [
                unref(status) === "Cargando..." ? (openBlock(), createBlock(VProgressCircular, {
                  key: "progress-circular",
                  rotate: 360,
                  color: "primary",
                  size: 30,
                  width: "4",
                  "model-value": unref(progress)
                }, null, 8, ["model-value"])) : unref(status) === "Listo" && unref(isValidFile) ? (openBlock(), createBlock(_component_Icon, {
                  key: "checkbox",
                  name: "futzo-icon:check-box"
                })) : unref(status) === "Listo" && !unref(isValidFile) ? (openBlock(), createBlock(_component_Icon, {
                  key: "trash",
                  name: "futzo-icon:trash-error",
                  size: "30",
                  class: "cursor-pointer",
                  onClick: () => showDrops.value = false
                }, null, 8, ["onClick"])) : createCommentVNode("", true)
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      if (unref(progress) === 100) {
        _push(`<div class="actions" data-v-1f4eefe1>`);
        _push(ssrRenderComponent(VBtn, {
          size: 44,
          class: "mr-1 rounded-lg",
          color: "secondary",
          variant: "outlined",
          style: { "width": "calc(50% - 4px)" }
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Cancelar `);
            } else {
              return [
                createTextVNode(" Cancelar ")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(ssrRenderComponent(VBtn, {
          size: 44,
          class: "ml-1 rounded-lg",
          color: "primary",
          style: { "width": "calc(50% - 4px)" },
          disabled: __props.disabled,
          loading: __props.loading,
          onClick: () => emits("import-players")
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Confirmar `);
            } else {
              return [
                createTextVNode(" Confirmar ")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/import-dialog/drops.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const Drops = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["__scopeId", "data-v-1f4eefe1"]]);
const _sfc_main$2 = /* @__PURE__ */ defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    const { importModal, isImporting } = storeToRefs(usePlayerStore());
    const { teams } = storeToRefs(useTeamStore());
    const { importPlayersHandler, downloadTemplate } = usePlayerStore();
    const { searchTeams } = useTeamStore();
    const isDownloadTemplate = ref(false);
    const teamId = ref();
    const leaveHandler = () => {
    };
    const file = ref();
    const eventHandler = () => {
      importPlayersHandler(file.value, teamId.value);
    };
    const showTeamsInput = computed(() => !!file.value);
    const searchTeamsHandler = useDebounceFn((value) => {
      searchTeams(value);
    }, 600);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Icon = __nuxt_component_0;
      _push(ssrRenderComponent(VDialog, mergeProps({
        modelValue: unref(importModal),
        "onUpdate:modelValue": ($event) => isRef(importModal) ? importModal.value = $event : null,
        "max-width": "690",
        onAfterLeave: leaveHandler,
        scrollable: ""
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VCard, {
              class: "create-tournament-card futzo-rounded",
              style: { overflow: _ctx.$vuetify.display.mobile ? "" : "hidden" }
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$5, {
                    onClose: ($event) => importModal.value = false
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(Form, {
                    file: unref(file),
                    "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(VContainer, { class: "py-0" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VRow, { "no-gutters": "" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              if (unref(showTeamsInput)) {
                                _push5(ssrRenderComponent(VCol, {
                                  cols: "6",
                                  class: "d-flex justify-start"
                                }, {
                                  default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                    if (_push6) {
                                      _push6(ssrRenderComponent(VAutocomplete, {
                                        "onUpdate:search": unref(searchTeamsHandler),
                                        class: "ml-2",
                                        density: "compact",
                                        variant: "outlined",
                                        label: "Equipo",
                                        "item-value": "id",
                                        "item-title": "name",
                                        modelValue: unref(teamId),
                                        "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                        items: unref(teams)
                                      }, null, _parent6, _scopeId5));
                                    } else {
                                      return [
                                        createVNode(VAutocomplete, {
                                          "onUpdate:search": unref(searchTeamsHandler),
                                          class: "ml-2",
                                          density: "compact",
                                          variant: "outlined",
                                          label: "Equipo",
                                          "item-value": "id",
                                          "item-title": "name",
                                          modelValue: unref(teamId),
                                          "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                          items: unref(teams)
                                        }, null, 8, ["onUpdate:search", "modelValue", "onUpdate:modelValue", "items"])
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent5, _scopeId4));
                              } else {
                                _push5(`<!---->`);
                              }
                              _push5(ssrRenderComponent(VCol, { class: "d-flex justify-end" }, {
                                default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(ssrRenderComponent(VBtn, {
                                      color: "secondary",
                                      variant: "outlined",
                                      class: "app-bar-secondary-btn mr-2",
                                      onClick: unref(downloadTemplate),
                                      loading: unref(isDownloadTemplate),
                                      disabled: unref(isDownloadTemplate),
                                      size: "small"
                                    }, {
                                      prepend: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(ssrRenderComponent(_component_Icon, {
                                            name: "futzo-icon:file-type-excel",
                                            size: "24"
                                          }, null, _parent7, _scopeId6));
                                        } else {
                                          return [
                                            createVNode(_component_Icon, {
                                              name: "futzo-icon:file-type-excel",
                                              size: "24"
                                            })
                                          ];
                                        }
                                      }),
                                      default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                        if (_push7) {
                                          _push7(` Descargar Plantilla `);
                                        } else {
                                          return [
                                            createTextVNode(" Descargar Plantilla ")
                                          ];
                                        }
                                      }),
                                      _: 1
                                    }, _parent6, _scopeId5));
                                  } else {
                                    return [
                                      createVNode(VBtn, {
                                        color: "secondary",
                                        variant: "outlined",
                                        class: "app-bar-secondary-btn mr-2",
                                        onClick: unref(downloadTemplate),
                                        loading: unref(isDownloadTemplate),
                                        disabled: unref(isDownloadTemplate),
                                        size: "small"
                                      }, {
                                        prepend: withCtx(() => [
                                          createVNode(_component_Icon, {
                                            name: "futzo-icon:file-type-excel",
                                            size: "24"
                                          })
                                        ]),
                                        default: withCtx(() => [
                                          createTextVNode(" Descargar Plantilla ")
                                        ]),
                                        _: 1
                                      }, 8, ["onClick", "loading", "disabled"])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                            } else {
                              return [
                                unref(showTeamsInput) ? (openBlock(), createBlock(VCol, {
                                  key: 0,
                                  cols: "6",
                                  class: "d-flex justify-start"
                                }, {
                                  default: withCtx(() => [
                                    createVNode(VAutocomplete, {
                                      "onUpdate:search": unref(searchTeamsHandler),
                                      class: "ml-2",
                                      density: "compact",
                                      variant: "outlined",
                                      label: "Equipo",
                                      "item-value": "id",
                                      "item-title": "name",
                                      modelValue: unref(teamId),
                                      "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                      items: unref(teams)
                                    }, null, 8, ["onUpdate:search", "modelValue", "onUpdate:modelValue", "items"])
                                  ]),
                                  _: 1
                                })) : createCommentVNode("", true),
                                createVNode(VCol, { class: "d-flex justify-end" }, {
                                  default: withCtx(() => [
                                    createVNode(VBtn, {
                                      color: "secondary",
                                      variant: "outlined",
                                      class: "app-bar-secondary-btn mr-2",
                                      onClick: unref(downloadTemplate),
                                      loading: unref(isDownloadTemplate),
                                      disabled: unref(isDownloadTemplate),
                                      size: "small"
                                    }, {
                                      prepend: withCtx(() => [
                                        createVNode(_component_Icon, {
                                          name: "futzo-icon:file-type-excel",
                                          size: "24"
                                        })
                                      ]),
                                      default: withCtx(() => [
                                        createTextVNode(" Descargar Plantilla ")
                                      ]),
                                      _: 1
                                    }, 8, ["onClick", "loading", "disabled"])
                                  ]),
                                  _: 1
                                })
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VRow, { "no-gutters": "" }, {
                            default: withCtx(() => [
                              unref(showTeamsInput) ? (openBlock(), createBlock(VCol, {
                                key: 0,
                                cols: "6",
                                class: "d-flex justify-start"
                              }, {
                                default: withCtx(() => [
                                  createVNode(VAutocomplete, {
                                    "onUpdate:search": unref(searchTeamsHandler),
                                    class: "ml-2",
                                    density: "compact",
                                    variant: "outlined",
                                    label: "Equipo",
                                    "item-value": "id",
                                    "item-title": "name",
                                    modelValue: unref(teamId),
                                    "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                    items: unref(teams)
                                  }, null, 8, ["onUpdate:search", "modelValue", "onUpdate:modelValue", "items"])
                                ]),
                                _: 1
                              })) : createCommentVNode("", true),
                              createVNode(VCol, { class: "d-flex justify-end" }, {
                                default: withCtx(() => [
                                  createVNode(VBtn, {
                                    color: "secondary",
                                    variant: "outlined",
                                    class: "app-bar-secondary-btn mr-2",
                                    onClick: unref(downloadTemplate),
                                    loading: unref(isDownloadTemplate),
                                    disabled: unref(isDownloadTemplate),
                                    size: "small"
                                  }, {
                                    prepend: withCtx(() => [
                                      createVNode(_component_Icon, {
                                        name: "futzo-icon:file-type-excel",
                                        size: "24"
                                      })
                                    ]),
                                    default: withCtx(() => [
                                      createTextVNode(" Descargar Plantilla ")
                                    ]),
                                    _: 1
                                  }, 8, ["onClick", "loading", "disabled"])
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(Drops, {
                    file: unref(file),
                    "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null,
                    onImportPlayers: eventHandler,
                    disabled: !unref(teamId),
                    loading: unref(isImporting)
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$5, {
                      onClose: ($event) => importModal.value = false
                    }, null, 8, ["onClose"]),
                    createVNode(Form, {
                      file: unref(file),
                      "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null
                    }, null, 8, ["file", "onUpdate:file"]),
                    createVNode(VContainer, { class: "py-0" }, {
                      default: withCtx(() => [
                        createVNode(VRow, { "no-gutters": "" }, {
                          default: withCtx(() => [
                            unref(showTeamsInput) ? (openBlock(), createBlock(VCol, {
                              key: 0,
                              cols: "6",
                              class: "d-flex justify-start"
                            }, {
                              default: withCtx(() => [
                                createVNode(VAutocomplete, {
                                  "onUpdate:search": unref(searchTeamsHandler),
                                  class: "ml-2",
                                  density: "compact",
                                  variant: "outlined",
                                  label: "Equipo",
                                  "item-value": "id",
                                  "item-title": "name",
                                  modelValue: unref(teamId),
                                  "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                  items: unref(teams)
                                }, null, 8, ["onUpdate:search", "modelValue", "onUpdate:modelValue", "items"])
                              ]),
                              _: 1
                            })) : createCommentVNode("", true),
                            createVNode(VCol, { class: "d-flex justify-end" }, {
                              default: withCtx(() => [
                                createVNode(VBtn, {
                                  color: "secondary",
                                  variant: "outlined",
                                  class: "app-bar-secondary-btn mr-2",
                                  onClick: unref(downloadTemplate),
                                  loading: unref(isDownloadTemplate),
                                  disabled: unref(isDownloadTemplate),
                                  size: "small"
                                }, {
                                  prepend: withCtx(() => [
                                    createVNode(_component_Icon, {
                                      name: "futzo-icon:file-type-excel",
                                      size: "24"
                                    })
                                  ]),
                                  default: withCtx(() => [
                                    createTextVNode(" Descargar Plantilla ")
                                  ]),
                                  _: 1
                                }, 8, ["onClick", "loading", "disabled"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(Drops, {
                      file: unref(file),
                      "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null,
                      onImportPlayers: eventHandler,
                      disabled: !unref(teamId),
                      loading: unref(isImporting)
                    }, null, 8, ["file", "onUpdate:file", "disabled", "loading"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VCard, {
                class: "create-tournament-card futzo-rounded",
                style: { overflow: _ctx.$vuetify.display.mobile ? "" : "hidden" }
              }, {
                default: withCtx(() => [
                  createVNode(_sfc_main$5, {
                    onClose: ($event) => importModal.value = false
                  }, null, 8, ["onClose"]),
                  createVNode(Form, {
                    file: unref(file),
                    "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null
                  }, null, 8, ["file", "onUpdate:file"]),
                  createVNode(VContainer, { class: "py-0" }, {
                    default: withCtx(() => [
                      createVNode(VRow, { "no-gutters": "" }, {
                        default: withCtx(() => [
                          unref(showTeamsInput) ? (openBlock(), createBlock(VCol, {
                            key: 0,
                            cols: "6",
                            class: "d-flex justify-start"
                          }, {
                            default: withCtx(() => [
                              createVNode(VAutocomplete, {
                                "onUpdate:search": unref(searchTeamsHandler),
                                class: "ml-2",
                                density: "compact",
                                variant: "outlined",
                                label: "Equipo",
                                "item-value": "id",
                                "item-title": "name",
                                modelValue: unref(teamId),
                                "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                items: unref(teams)
                              }, null, 8, ["onUpdate:search", "modelValue", "onUpdate:modelValue", "items"])
                            ]),
                            _: 1
                          })) : createCommentVNode("", true),
                          createVNode(VCol, { class: "d-flex justify-end" }, {
                            default: withCtx(() => [
                              createVNode(VBtn, {
                                color: "secondary",
                                variant: "outlined",
                                class: "app-bar-secondary-btn mr-2",
                                onClick: unref(downloadTemplate),
                                loading: unref(isDownloadTemplate),
                                disabled: unref(isDownloadTemplate),
                                size: "small"
                              }, {
                                prepend: withCtx(() => [
                                  createVNode(_component_Icon, {
                                    name: "futzo-icon:file-type-excel",
                                    size: "24"
                                  })
                                ]),
                                default: withCtx(() => [
                                  createTextVNode(" Descargar Plantilla ")
                                ]),
                                _: 1
                              }, 8, ["onClick", "loading", "disabled"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(Drops, {
                    file: unref(file),
                    "onUpdate:file": ($event) => isRef(file) ? file.value = $event : null,
                    onImportPlayers: eventHandler,
                    disabled: !unref(teamId),
                    loading: unref(isImporting)
                  }, null, 8, ["file", "onUpdate:file", "disabled", "loading"])
                ]),
                _: 1
              }, 8, ["style"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/import-dialog/index.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "assign-team-dialog",
  __ssrInlineRender: true,
  setup(__props) {
    const { showAssignTeam, playerId } = storeToRefs(usePlayerStore());
    const teamId = ref(null);
    const { teams } = storeToRefs(useTeamStore());
    const confirmAssignment = async () => {
      const client = useSanctumClient();
      if (teamId.value) {
        await client(`/api/v1/admin/teams/${teamId.value}/players/${playerId.value}/assign`, {
          method: "POST"
        });
        teamId.value = null;
        playerId.value = null;
        showAssignTeam.value = false;
        await usePlayerStore().getPlayers();
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = _sfc_main$l;
      _push(ssrRenderComponent(_component_Dialog, mergeProps({
        title: "Asignar Equipo",
        subtitle: "Selecciona un equipo para asignar al jugador",
        loading: false,
        modelValue: unref(showAssignTeam),
        "onUpdate:modelValue": ($event) => isRef(showAssignTeam) ? showAssignTeam.value = $event : null,
        "icon-name": "game-icons:babyfoot-players"
      }, _attrs), {
        "v-card-text": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(VContainer, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(VRow, null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(VCol, { cols: "12" }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(ssrRenderComponent(VAutocomplete, {
                                modelValue: unref(teamId),
                                "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                items: unref(teams),
                                "item-title": "name",
                                "item-value": "id",
                                label: "Selecciona un equipo",
                                outlined: "",
                                dense: ""
                              }, null, _parent5, _scopeId4));
                            } else {
                              return [
                                createVNode(VAutocomplete, {
                                  modelValue: unref(teamId),
                                  "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                  items: unref(teams),
                                  "item-title": "name",
                                  "item-value": "id",
                                  label: "Selecciona un equipo",
                                  outlined: "",
                                  dense: ""
                                }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(VCol, { cols: "12" }, {
                            default: withCtx(() => [
                              createVNode(VAutocomplete, {
                                modelValue: unref(teamId),
                                "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                                items: unref(teams),
                                "item-title": "name",
                                "item-value": "id",
                                label: "Selecciona un equipo",
                                outlined: "",
                                dense: ""
                              }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(VRow, null, {
                      default: withCtx(() => [
                        createVNode(VCol, { cols: "12" }, {
                          default: withCtx(() => [
                            createVNode(VAutocomplete, {
                              modelValue: unref(teamId),
                              "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                              items: unref(teams),
                              "item-title": "name",
                              "item-value": "id",
                              label: "Selecciona un equipo",
                              outlined: "",
                              dense: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(VContainer, null, {
                default: withCtx(() => [
                  createVNode(VRow, null, {
                    default: withCtx(() => [
                      createVNode(VCol, { cols: "12" }, {
                        default: withCtx(() => [
                          createVNode(VAutocomplete, {
                            modelValue: unref(teamId),
                            "onUpdate:modelValue": ($event) => isRef(teamId) ? teamId.value = $event : null,
                            items: unref(teams),
                            "item-title": "name",
                            "item-value": "id",
                            label: "Selecciona un equipo",
                            outlined: "",
                            dense: ""
                          }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="d-flex flex-row-reverse w-100 px-2"${_scopeId}>`);
            _push2(ssrRenderComponent(VBtn, {
              color: "primary",
              onClick: confirmAssignment,
              disabled: !unref(teamId)
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Asignar Equipo `);
                } else {
                  return [
                    createTextVNode(" Asignar Equipo ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(VBtn, {
              color: "secondary",
              onClick: ($event) => showAssignTeam.value = false
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancelar `);
                } else {
                  return [
                    createTextVNode(" Cancelar ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "d-flex flex-row-reverse w-100 px-2" }, [
                createVNode(VBtn, {
                  color: "primary",
                  onClick: confirmAssignment,
                  disabled: !unref(teamId)
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Asignar Equipo ")
                  ]),
                  _: 1
                }, 8, ["disabled"]),
                createVNode(VBtn, {
                  color: "secondary",
                  onClick: ($event) => showAssignTeam.value = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancelar ")
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/pages/jugadores/assign-team-dialog.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "index",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PageLayout = _sfc_main$2$1;
      _push(ssrRenderComponent(_component_PageLayout, _attrs, {
        "app-bar": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$g, null, {
              buttons: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$f, null, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$f)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$g, null, {
                buttons: withCtx(() => [
                  createVNode(_sfc_main$f)
                ]),
                _: 1
              })
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$d, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$6, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$7, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$1, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$d),
              createVNode(_sfc_main$6),
              createVNode(_sfc_main$7),
              createVNode(_sfc_main$2),
              createVNode(_sfc_main$1)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/jugadores/index.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};

export { _sfc_main as default };
//# sourceMappingURL=index-D9M4UXLm.mjs.map
